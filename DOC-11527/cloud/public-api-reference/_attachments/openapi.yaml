openapi: 3.0.3
info:
  title: Couchbase Public API
  version: 2.0.0
servers:
- url: https://cloudapi.cloud.couchbase.com
security:
- token: []
paths:
  /v2/status:
    get:
      description: Returns a public API status
      operationId: status/show
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusOK'
          description: Success
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      security: []
      summary: API status
      tags:
      - status
  /v2/users:
    get:
      description: |
        Return a paginated list of organization Users.
      operationId: users/list
      parameters:
      - description: Sets how many results you would like to have on each page
        in: query
        name: page
        required: false
        schema:
          type: integer
      - description: Sets what page you would like to view
        in: query
        name: perPage
        required: false
        schema:
          type: integer
      - allowReserved: true
        description: Sets order of how you would like to sort results and also the
          key you would like to order by
        example: name.desc
        in: query
        name: sortBy
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: List Users
      tags:
      - users
  /v2/users/{id}:
    get:
      description: ""
      operationId: users/get
      parameters:
      - description: User ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Get User
  /v2/projects:
    get:
      description: Returns a paginated list of projects created by the tenant
      operationId: projects/list
      parameters:
      - description: Sets how many results you would like to have on each page
        in: query
        name: page
        required: false
        schema:
          type: integer
      - description: Sets what page you would like to view
        in: query
        name: perPage
        required: false
        schema:
          type: integer
      - allowReserved: true
        description: Sets order of how you would like to sort results and also the
          key you would like to order by
        example: name.desc
        in: query
        name: sortBy
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResponse'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: List Projects
      tags:
      - projects
    post:
      description: Creates project in tenant, returns id of project on success
      operationId: projects/create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Create project
      tags:
      - projects
  /v2/projects/{id}:
    delete:
      description: Deletes endpoint with specified ID if exists, returns true on success
        and error if not
      operationId: projects/delete
      parameters:
      - description: Project ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          description: The project was deleted successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Delete project
      tags:
      - projects
    get:
      description: Returns the project with the ID
      operationId: projects/show
      parameters:
      - description: Project ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Get project by ID
      tags:
      - projects
  /v3/clusters:
    get:
      description: Returns a paginated list of all clusters
      operationId: clusters/v3list
      parameters:
      - description: Sets how many results you would like to have on each page
        in: query
        name: page
        required: false
        schema:
          type: integer
      - description: Sets what page you would like to view
        in: query
        name: perPage
        required: false
        schema:
          type: integer
      - description: Cloud ID for filtering cloud clusters.
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: query
        name: cloudId
        schema:
          format: uuid
          type: string
      - description: Project ID for filtering project clusters.
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: query
        name: projectId
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3ClusterList'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: List all clusters v3
      tags:
      - clusters v3
    post:
      description: Creates a cluster with the given specifications and returns the
        id of the cluster on success
      operationId: clusters/v3create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V3CreateClusterRequest'
      responses:
        "202":
          description: Success
          headers:
            Location:
              description: |
                Reference to the created cluster
              schema:
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Create Cluster V3
      tags:
      - clusters v3
  /v3/clusters/{id}:
    delete:
      description: Starts the deletion process for the cluster
      operationId: clusters/v3delete
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "202":
          description: Successfully started the cluster deletion process
          headers:
            Location:
              description: |
                Reference to the cluster to be deleted
              schema:
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Delete Cluster V3
      tags:
      - clusters v3
    get:
      description: Retrieves cluster information using the provided cluster ID
      operationId: clusters/v3show
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3Cluster'
          description: |
            If found, returns the cluster information
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Get Cluster Info V3
      tags:
      - clusters v3
  /v3/clusters/{id}/auditlogs:
    get:
      description: |
        Returns a list of all audit log export requests. The list starts with the most recent request. The information returned for each request includes the time of the request's creation, the start and end times of the period for which records are required, a download URL for retrieval of a compressed file that contains the log files, and the progress-status of the request. When progress-status is 'ready', the compressed file can be manually downloaded, using the download URL.
      operationId: clusters/v3auditlogs-list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3ClusterAuditLogExportList'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: List Cluster Audit Log Exports
      tags:
      - clusters v3
    post:
      description: |
        Creates a new request for the export of audit log files that cover a user-specified time-period. The returned value includes a download ID, which can be referenced in a subsequent Get Audit Log Request call. Time stamps must be in RFC3339 format.
      operationId: clusters/v3auditlogs-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V3ClusterAuditLogExportCreate'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3ClusterAuditLogExportDownloadID'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Method not allowed
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Create Cluster Audit Log Export
      tags:
      - clusters v3
  /v3/clusters/{id}/auditlogs/{downloadId}:
    get:
      description: |
        Returns a specific audit log export request. The request is specified with a download ID, previously returned by Create Audit Log Request: the download ID must be appended to the URI of Get Audit Log Request. The information returned for the specified request includes the time of the request's creation, the start and end times of the period for which records are required, a download URL for retrieval of a compressed file that contains the log files, and the progress-status of the request. When progress-status is 'ready', the compressed file can be manually downloaded, using the download URL.
      operationId: clusters/v3auditlogs-show
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3ClusterAuditLogExport'
          description: Success, job being processed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Get Cluster Audit Log Request
      tags:
      - clusters v3
  /v3/clusters/{id}/status:
    get:
      description: Gets cluster status
      operationId: clusters/v3status
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3ClusterStatusResponse'
          description: |
            Cluster status
      summary: Get Cluster Status V3
      tags:
      - clusters v3
  /v3/clusters/{id}/meta:
    put:
      description: Updates the cluster metadata
      operationId: clusters/v3update-meta
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V3UpdateClusterMetaRequest'
      responses:
        "204":
          description: Successfully updated the cluster metadata
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Update Cluster Metadata V3
      tags:
      - clusters v3
  /v3/clusters/{id}/servers:
    put:
      description: Updates the cluster server group to scale in / out, up / down
      operationId: clusters/v3update-servers
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V3UpdateClusterServersRequest'
      responses:
        "202":
          description: Success
          headers:
            Location:
              description: |
                Reference to the updated cluster
              schema:
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Update Cluster Servers V3
      tags:
      - clusters v3
  /v3/clusters/{id}/support:
    put:
      description: Updates the cluster support package details
      operationId: clusters/v3update-support
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V3UpdateClusterSupportRequest'
      responses:
        "204":
          description: Successfully updated the support package details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Update Cluster Support Package V3
      tags:
      - clusters v3
  /v3/clusters/{id}/users:
    post:
      description: Creates a new user for a cluster with access to buckets/scopes
      operationId: clusters/v3create-user
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V3CreateClusterUserRequest'
      responses:
        "201":
          description: Successfully created cluster user
          headers:
            Location:
              description: Reference to the created cluster user
              schema:
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Create cluster user
      tags:
      - clusters v3
  /v3/clusters/{id}/audit:
    get:
      description: |
        Retrieves the current audit settings for the cluster; including a list of all enabled audit events, a list of disabled users, and the overall enablement status of the cluster.
      operationId: clusters/v3get-audit
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3ClusterAuditSettings'
          description: |
            Returns the current Audit settings for the cluster
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: Get Cluster Audit Settings
      tags:
      - clusters v3
    post:
      description: |
        Configures the audit settings for the cluster. This allows auditing to be enabled or disabled for the cluster. It also allows specific audit events to be enabled, and specific users to be disabled.
      operationId: clusters/v3configure-audit
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V3ClusterAuditSettings'
      summary: Configure Cluster Audit Settings
      tags:
      - clusters v3
  /v3/clusters/{id}/auditdescriptors:
    get:
      description: |
        Returns the list of all filterable audit events for the cluster. Filterable audit events are those that can be either disabled or enabled. If a filterable audit event is currently disabled, it can be enabled through its inclusion in the enabledEventIDs field of Configure Cluster Audit Settings.
      operationId: clusters/v3get-audit-descriptors
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3ClusterAuditFilterableEventList'
          description: |
            Returns the list of filterable Audit Events for the cluster.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: List Filterable Audit Events
      tags:
      - clusters v3
  /v3/clusters/{id}/off:
    post:
      description: |
        Sends a request to turn off a database from a healthy state.
      operationId: clusters/v3off
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "202":
          description: Successfully turning the cluster off
          headers:
            Location:
              schema:
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Cluster in an invalid state to turn off
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error whilst attempting to turn off a cluster
      summary: Turn off selected database
      tags:
      - clusters v3
  /v3/clusters/{id}/on:
    post:
      description: |
        Sends a request to turn a database back `on` from an `off` state.
      operationId: clusters/v3on
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V3TurnOn'
      responses:
        "202":
          description: Successfully turning the cluster on
          headers:
            Location:
              schema:
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Cluster in an invalid state to turn on
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error whilst attempting to turn on a cluster
      summary: Turn on the selected database
      tags:
      - clusters v3
  /v3/clusters/{id}/schedulesonoff:
    delete:
      description: |
        Sends a request to delete the cluster On/Off schedule.
      operationId: clusters/v3delete-schedules-on-off
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "202":
          description: Deletes the on/off schedule for the database
          headers:
            Location:
              schema:
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: An internal server error occurred while attempting to delete
            the on/off schedule
      summary: Deletes the database's on/off schedule
      tags:
      - clusters v3
    get:
      description: |
        Sends a request to get the cluster On/Off schedule.
      operationId: clusters/v3get-schedules-on-off
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "202":
          description: Returns the on/off schedule for the database
          headers:
            Location:
              schema:
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: An internal server error occurred while attempting to get the
            on/off schedule
      summary: Gets the database's on/off schedule
      tags:
      - clusters v3
    post:
      description: |
        Sends a request to modify the cluster On/Off schedule.
      operationId: clusters/v3modify-schedules-on-off
      parameters:
      - description: Cluster ID
        example: 83143c02-a1b6-4bdf-ba4e-7a85aab633e6
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V3ModifyOnOffSchedule'
      responses:
        "202":
          description: Modifies the on/off schedule for the database
          headers:
            Location:
              schema:
                type: string
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: An internal server error occurred while attempting to modify
            the on/off schedule
      summary: Modifies the database's on/off schedule
      tags:
      - clusters v3
  /v3/events:
    get:
      description: Return a paginated list of organization Events.
      operationId: events/v3list
      parameters:
      - description: Sets how many results you would like to have on each page
        in: query
        name: page
        required: false
        schema:
          type: integer
      - description: Sets what page you would like to view
        in: query
        name: perPage
        required: false
        schema:
          type: integer
      - allowReserved: true
        description: Sets order of how you would like to sort results and also the
          key you would like to order by
        example: name.desc
        in: query
        name: sortBy
        required: false
        schema:
          type: string
      - description: Start point in the last 24 hours, RFC3339 format. Defaults to
          24 hours before request.
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
      - description: End datetime in the last 24 hours, RFC3339 format. Defaults to
          Now.
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
      - description: Filter by user UUID. Default returns all.
        in: query
        name: actor
        required: false
        schema:
          format: uuid
          type: string
      - description: filter by cluster. Default is to return all.
        in: query
        name: cluster
        required: false
        schema:
          type: string
      - description: Filter by project. Default is to return all.
        in: query
        name: project
        required: false
        schema:
          type: string
      - description: Filter by severity. Default is to return all.
        in: query
        name: severity
        required: false
        schema:
          type: string
      - description: Filter by tag(s). Default is to return all. Tags are availability,
          billing, maintenance, performance, security, alert.
        in: query
        name: tag
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventsResponse'
          description: Successfully exported events
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: List Events
      tags:
      - events v3
  /v3/events/{id}:
    get:
      description: |
        Return an event
      operationId: events/v3show
      parameters:
      - description: Event ID
        example: 48582ae5-2990-431a-b310-6f4b57fde72f
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventsResponse'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Access forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Request validation error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/goof'
          description: Internal server error
      summary: List Event
      tags:
      - events v3
components:
  schemas:
    StatusOK:
      example:
        status: status
      properties:
        status:
          type: string
      required:
      - status
      type: object
    goof:
      properties:
        message:
          type: string
        errorType:
          type: string
      required:
      - errorType
      - message
      type: object
    ListUsersResponse:
      example:
        cursor:
          pages:
            next: 6
            totalItems: 2
            perPage: 5
            previous: 1
            last: 5
            page: 0
          hrefs:
            next: https://openapi-generator.tech
            last: https://openapi-generator.tech
            previous: https://openapi-generator.tech
            first: https://openapi-generator.tech
        data:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
      properties:
        cursor:
          $ref: '#/components/schemas/cursor'
        data:
          items:
            $ref: '#/components/schemas/ListUsersResponseItem'
          type: array
      required:
      - cursor
      - data
      type: object
    ListUsersResponseItem:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        email:
          type: string
      required:
      - email
      - id
      - name
    User:
      example:
        emailNotifications: true
        createdAt: 2021-01-30T08:30:00Z
        timezone: timezone
        roles:
        - roles
        - roles
        name: name
        mfaEnabled: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        region: region
        email: email
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        email:
          type: string
        mfaEnabled:
          type: boolean
        region:
          type: string
        timezone:
          type: string
        emailNotifications:
          type: boolean
        createdAt:
          description: Creation date and time
          example: 2021-01-30T08:30:00Z
          format: date-time
          type: string
        roles:
          items:
            type: string
          type: array
      required:
      - createdAt
      - email
      - emailNotifications
      - id
      - mfaEnabled
      - name
      - region
      - roles
      - timezone
      type: object
    ListProjectsResponse:
      example:
        cursor:
          pages:
            next: 6
            totalItems: 2
            perPage: 5
            previous: 1
            last: 5
            page: 0
          hrefs:
            next: https://openapi-generator.tech
            last: https://openapi-generator.tech
            previous: https://openapi-generator.tech
            first: https://openapi-generator.tech
        data:
        - createdAt: 2021-01-30T08:30:00Z
          name: name
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - createdAt: 2021-01-30T08:30:00Z
          name: name
          tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        cursor:
          $ref: '#/components/schemas/cursor'
        data:
          items:
            $ref: '#/components/schemas/Project'
          type: array
      required:
      - cursor
      - data
      type: object
    Project:
      example:
        createdAt: 2021-01-30T08:30:00Z
        name: name
        tenantId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          maximum: 256
          minimum: 1
          type: string
        tenantId:
          format: uuid
          type: string
        createdAt:
          description: Creation date and time
          example: 2021-01-30T08:30:00Z
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - name
      - tenantId
      type: object
    CreateProjectRequest:
      example:
        name: name
      properties:
        name:
          maximum: 128
          minimum: 1
          type: string
      required:
      - name
      type: object
    CIDR:
      example: 0.0.0.0/32
      minLength: 7
      type: string
    V3ClusterList:
      example:
        cursor:
          pages:
            next: 6
            totalItems: 2
            perPage: 5
            previous: 1
            last: 5
            page: 0
          hrefs:
            next: https://openapi-generator.tech
            last: https://openapi-generator.tech
            previous: https://openapi-generator.tech
            first: https://openapi-generator.tech
        data:
          tenantId: tenantId
          items:
          - environment: environment
            cloudId: cloudId
            name: name
            id: id
            projectId: projectId
          - environment: environment
            cloudId: cloudId
            name: name
            id: id
            projectId: projectId
      properties:
        cursor:
          $ref: '#/components/schemas/cursor'
        data:
          $ref: '#/components/schemas/V3ClusterList_data'
      required:
      - cursor
      - data
      type: object
    V3CreateClusterRequest:
      example:
        environment: hosted
        servers:
        - compute: m5.xlarge
          size: 4
          services:
          - data
          - index
          storage:
            size: 50
            IOPS: 3000
            type: GP3
        - compute: m5.xlarge
          size: 4
          services:
          - data
          - index
          storage:
            size: 50
            IOPS: 3000
            type: GP3
        supportPackage:
          timezone: IST
          type: DeveloperPro
        clusterName: Demo G2 Cluster
        description: Example description of a G2 cluster
        place:
          singleAZ: true
          hosted:
            provider: aws
            CIDR: 10.21.0.0/16
            region: us-west-2
        projectId: 99d9487a-235b-4b5f-b610-577a60edb911
      properties:
        environment:
          $ref: '#/components/schemas/v3Environment'
        clusterName:
          description: Name of the cluster
          example: Demo G2 Cluster
          maxLength: 128
          minLength: 2
          type: string
        projectId:
          description: Uniquely identifiable projectId
          example: 99d9487a-235b-4b5f-b610-577a60edb911
          format: uuid
          type: string
        description:
          description: A short description that describes the cluster
          example: Example description of a G2 cluster
          type: string
        place:
          $ref: '#/components/schemas/V3Place'
        servers:
          description: Server specifications for creating the cluster
          items:
            $ref: '#/components/schemas/V3Servers'
          type: array
        supportPackage:
          $ref: '#/components/schemas/V3SupportPackage'
      required:
      - clusterName
      - environment
      - place
      - projectId
      - servers
      - supportPackage
      type: object
    V3Place:
      description: Cluster deployment location based on the value provided in environment
      example:
        singleAZ: true
        hosted:
          provider: aws
          CIDR: 10.21.0.0/16
          region: us-west-2
      properties:
        singleAZ:
          description: Has to be true if the supportPackage.type is equal to "Basic"
          example: true
          type: boolean
        hosted:
          $ref: '#/components/schemas/V3Place_hosted'
      required:
      - singleAZ
      type: object
    V3Servers:
      example:
        compute: m5.xlarge
        size: 4
        services:
        - data
        - index
        storage:
          size: 50
          IOPS: 3000
          type: GP3
      properties:
        size:
          description: How many nodes, value >= 3, <= 27. Total nodes in the cluster
            <= 27
          example: 4
          maximum: 27
          minimum: 3
          type: integer
        compute:
          description: Compute instance type
          example: m5.xlarge
          type: string
        services:
          description: Array of couchbase services to be installed on the nodes
          example:
          - data
          - index
          items:
            $ref: '#/components/schemas/v3CouchbaseServices'
          type: array
        storage:
          $ref: '#/components/schemas/V3Servers_storage'
      required:
      - compute
      - services
      - size
      - storage
      type: object
    V3SupportPackage:
      description: |
        One from "Basic", "DeveloperPro" or "Enterprise"
      example:
        timezone: IST
        type: DeveloperPro
      properties:
        timezone:
          $ref: '#/components/schemas/v3SupportPackageTimezones'
        type:
          $ref: '#/components/schemas/v3SupportPackageType'
      required:
      - timezone
      - type
      type: object
    V3Cluster:
      example:
        endpointsSrv: endpointsSrv
        availabilityZones:
        - availabilityZones
        - availabilityZones
        version:
          components:
            cbServerVersion: cbServerVersion
          name: name
        createdAt: 2000-01-23T04:56:07.000+00:00
        environment: environment
        servers:
        - compute: compute
          size: 0
          services:
          - services
          - services
          storage:
            size: 1
            IOPS: 6
            type: type
        - compute: compute
          size: 0
          services:
          - services
          - services
          storage:
            size: 1
            IOPS: 6
            type: type
        name: name
        tenantId: tenantId
        id: id
        place:
          provider: provider
          CIDR: CIDR
          region: region
        projectId: projectId
        support: support
        updatedAt: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        id:
          type: string
        name:
          type: string
        tenantId:
          type: string
        projectId:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        status:
          type: string
        version:
          $ref: '#/components/schemas/V3Cluster_version'
        endpointsSrv:
          type: string
        environment:
          type: string
        place:
          $ref: '#/components/schemas/V3Cluster_place'
        servers:
          items:
            $ref: '#/components/schemas/V3Cluster_servers'
          type: array
        availabilityZones:
          items:
            type: string
          type: array
        support:
          type: string
      required:
      - availabilityZones
      - createdAt
      - environment
      - id
      - name
      - place
      - projectId
      - servers
      - status
      - support
      - tenantId
      - updatedAt
      - version
      type: object
    V3ClusterAuditLogExportList:
      example:
        cursor:
          pages:
            next: 6
            totalItems: 2
            perPage: 5
            previous: 1
            last: 5
            page: 0
          hrefs:
            next: https://openapi-generator.tech
            last: https://openapi-generator.tech
            previous: https://openapi-generator.tech
            first: https://openapi-generator.tech
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          downloadURL: downloadURL
          start: 2000-01-23T04:56:07.000+00:00
          downloadID: downloadID
          expiration: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
          status: status
        - createdAt: 2000-01-23T04:56:07.000+00:00
          downloadURL: downloadURL
          start: 2000-01-23T04:56:07.000+00:00
          downloadID: downloadID
          expiration: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
          status: status
      properties:
        cursor:
          $ref: '#/components/schemas/cursor'
        data:
          items:
            $ref: '#/components/schemas/V3ClusterAuditLogExport'
          type: array
      required:
      - cursor
      - data
      type: object
    V3ClusterAuditLogExport:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        downloadURL: downloadURL
        start: 2000-01-23T04:56:07.000+00:00
        downloadID: downloadID
        expiration: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        status:
          type: string
        downloadID:
          type: string
        downloadURL:
          nullable: true
          type: string
        expiration:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
      type: object
    V3ClusterAuditLogExportDownloadID:
      example:
        downloadID: downloadID
      properties:
        downloadID:
          type: string
      type: object
    V3ClusterAuditLogExportCreate:
      example:
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
      properties:
        start:
          description: Start time of requested audit logs. Must be at least 15 minutes
            in the past, and not exceed 30 days in the past.
          format: date-time
          type: string
        end:
          description: End time of requested audit logs. Must be at least 15 minutes
            after the given start time. Defaults to now.
          format: date-time
          type: string
      required:
      - start
      type: object
    V3ClusterStatusResponse:
      example:
        status: deploying
      properties:
        status:
          $ref: '#/components/schemas/v3ClusterStatus'
      required:
      - status
      type: object
    V3UpdateClusterMetaRequest:
      example:
        name: name
        description: description
      minProperties: 1
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    V3UpdateClusterServersRequest:
      example:
        servers:
        - compute: m5.xlarge
          size: 4
          services:
          - data
          - index
          storage:
            size: 50
            IOPS: 3000
            type: GP3
        - compute: m5.xlarge
          size: 4
          services:
          - data
          - index
          storage:
            size: 50
            IOPS: 3000
            type: GP3
      properties:
        servers:
          items:
            $ref: '#/components/schemas/V3Servers'
          type: array
      required:
      - servers
      type: object
    V3UpdateClusterSupportRequest:
      example:
        supportPackage:
          timezone: IST
          type: DeveloperPro
      properties:
        supportPackage:
          $ref: '#/components/schemas/V3UpdateClusterSupportRequest_supportPackage'
      required:
      - supportPackage
      type: object
    V3CreateClusterUserRequest:
      example:
        password: Password123!
        buckets:
        - scope: _default
          name: bucket1
        - scope: _default
          name: bucket1
        username: user1
      properties:
        username:
          example: user1
          type: string
        password:
          example: Password123!
          type: string
        allBucketsAccess:
          $ref: '#/components/schemas/v3BucketRoles'
        buckets:
          items:
            $ref: '#/components/schemas/V3CreateClusterUserRequest_buckets'
          type: array
      required:
      - password
      - username
      type: object
    V3ClusterAuditSettings:
      example:
        auditdEnabled: true
        disabledUsers:
        - domain: local
          name: name
        - domain: local
          name: name
        enabledEventIDs:
        - 112
        - 112
      properties:
        auditdEnabled:
          description: Controls whether Audit logging is enabled or disabled.
          example: true
          type: boolean
        enabledEventIDs:
          description: |
            The disabled parameter indicates which individual filterable events are disabled. Its value must be one or more filterable-event IDs. Filterable-event IDs can be retrieved by means of the GET /clusters/{id}/audit/descriptors method and URI.
          items:
            description: A filterable event ID.
            example: 112
            type: integer
          type: array
        disabledUsers:
          description: |
            The disabledUsers parameter disables filterable-event auditing on a per user basis. Its value must be an array of users, specified as objects with both name and domain fields. Each user may be:
              - A local user, specified in the form `{name:"localusername",
                domain:"local"}`.
              - An external user, specified in the form
                `{name:"externalusername", domain:"external"}`.
              - An internal user, specified in the form
                `{name:"@internalusername", domain:"local"}`.
            Available internal users are @eventing, `@cbq-engine`, `@ns_server`, `@index`, `@projector`, `@goxdcr`, `@fts`, and `@cbas`. If `auditdEnabled` is true, and one or more users are specified as the value of disabledUsers, only filterable events are ignored for those users: non-filterable events continue to be audited.
          items:
            $ref: '#/components/schemas/V3ClusterAuditSettings_disabledUsers'
          type: array
      required:
      - auditdEnabled
      type: object
    V3ClusterAuditFilterableEventList:
      example:
        events:
        - module: module
          name: name
          description: description
          id: 0
        - module: module
          name: name
          description: description
          id: 0
      properties:
        events:
          items:
            $ref: '#/components/schemas/V3ClusterAuditFilterableEvent'
          type: array
      type: object
    V3ClusterAuditFilterableEvent:
      description: A list of all filterable events. These events may be enabled by
        passing their event IDs to the enabledEventIDs parameter of POST /clusters/{id}/audit
      example:
        module: module
        name: name
        description: description
        id: 0
      properties:
        id:
          description: The event ID.
          type: integer
        name:
          description: The event name.
          type: string
        module:
          description: The event module.
          type: string
        description:
          description: A description of the event.
          type: string
      type: object
    V3TurnOn:
      example:
        turnOnAppService: true
      properties:
        turnOnAppService:
          default: true
          type: boolean
    V3ModifyOnOffSchedule:
      example:
        timezone: Europe/London
        days:
        - state: "on"
        - state: "on"
        - state: "on"
        - state: "on"
        - state: "on"
        - state: custom
          from:
            hour: 21
            minute: 30
          to:
            hour: 23
            minute: 30
        - state: "off"
      properties:
        timezone:
          default: Europe/London
          description: The timezone for scheduled on/off, in IANA format.
          type: string
        days:
          description: |
            An array of seven objects, one for each day of the week, starting with Monday. Each item specifies whether the database is on all day, off all day, or on between the given times.
          items:
            $ref: '#/components/schemas/V3Day'
          maxItems: 7
          minItems: 7
          type: array
      required:
      - days
      - timezone
    V3Day:
      oneOf:
      - $ref: '#/components/schemas/V3DayAll'
      - $ref: '#/components/schemas/V3DayCustom'
    V3DayAll:
      properties:
        state:
          description: Specifies whether the database is on all day or off all day.
          enum:
          - "on"
          - "off"
          type: string
      required:
      - state
      type: object
    V3DayCustom:
      properties:
        state:
          description: Specifies that the database is on between the given times.
          enum:
          - custom
          type: string
        from:
          $ref: '#/components/schemas/V3DayCustomTimeFrom'
        to:
          $ref: '#/components/schemas/V3DayCustomTimeTo'
      required:
      - from
      - state
      title: v3DayCustom
      type: object
    V3DayCustomTimeFrom:
      description: Specifies the time when the database turns on.
      properties:
        hour:
          default: 21
          maximum: 23
          minimum: 0
          type: integer
        minute:
          default: 30
          enum:
          - 0
          - 30
          type: integer
      required:
      - hour
      - minute
      type: object
    V3DayCustomTimeTo:
      description: |
        Specifies the time when the database turns off. If omitted, the database stays on for the rest of the day.
      properties:
        hour:
          default: 23
          maximum: 23
          minimum: 0
          type: integer
        minute:
          default: 30
          enum:
          - 0
          - 30
          type: integer
      required:
      - hour
      - minute
      type: object
    ListEventsResponse:
      example:
        cursor:
          pages:
            next: 6
            totalItems: 2
            perPage: 5
            previous: 1
            last: 5
            page: 0
          hrefs:
            next: https://openapi-generator.tech
            last: https://openapi-generator.tech
            previous: https://openapi-generator.tech
            first: https://openapi-generator.tech
        data:
        - severity: severity
          summary: summary
          actorName: actorName
          clusterId: clusterId
          sessionId: sessionId
          syncGatewayName: syncGatewayName
          actorId: actorId
          tenantName: tenantName
          cloudName: cloudName
          syncGatewayId: syncGatewayId
          requestId: requestId
          cloudId: cloudId
          clusterName: clusterName
          tenantId: tenantId
          id: id
          time: 2000-01-23T04:56:07.000+00:00
          projectName: projectName
          projectId: projectId
          key: key
        - severity: severity
          summary: summary
          actorName: actorName
          clusterId: clusterId
          sessionId: sessionId
          syncGatewayName: syncGatewayName
          actorId: actorId
          tenantName: tenantName
          cloudName: cloudName
          syncGatewayId: syncGatewayId
          requestId: requestId
          cloudId: cloudId
          clusterName: clusterName
          tenantId: tenantId
          id: id
          time: 2000-01-23T04:56:07.000+00:00
          projectName: projectName
          projectId: projectId
          key: key
      properties:
        cursor:
          $ref: '#/components/schemas/cursor'
        data:
          items:
            $ref: '#/components/schemas/EventResponse'
          type: array
      required:
      - cursor
      - data
      type: object
    EventResponse:
      example:
        severity: severity
        summary: summary
        actorName: actorName
        clusterId: clusterId
        sessionId: sessionId
        syncGatewayName: syncGatewayName
        actorId: actorId
        tenantName: tenantName
        cloudName: cloudName
        syncGatewayId: syncGatewayId
        requestId: requestId
        cloudId: cloudId
        clusterName: clusterName
        tenantId: tenantId
        id: id
        time: 2000-01-23T04:56:07.000+00:00
        projectName: projectName
        projectId: projectId
        key: key
      properties:
        id:
          description: Unique ID of the event
          type: string
        key:
          description: Key defines the specific kind of Event. One from availability,
            billing, maintenance, performance or security
          type: string
        severity:
          description: The severity of the event. One from info, warning or critical
          type: string
        time:
          description: When the event happened, in RFC3339 format
          format: date-time
          type: string
        tenantId:
          description: The TenantID this Event belongs to
          type: string
        tenantName:
          description: The name of the tenant at the time of event
          type: string
        cloudId:
          description: The CloudID this Event refers to, only populated for In-VPC
            cluster
          type: string
        cloudName:
          description: CloudName is the name of the cloud at the time of event emission.
          type: string
        projectId:
          description: The ProjectID this Event refers to
          type: string
        projectName:
          description: ProjectName is the name of the project at the time of event
            emission
          type: string
        clusterId:
          description: The ClusterID this Event refers to
          type: string
        clusterName:
          description: ClusterName is the name of the cluster at the time of event
            emission
          type: string
        syncGatewayId:
          description: The SyncGatewayID this Event refers to
          type: string
        syncGatewayName:
          description: SyncGatewayName is the name of the sync gateway at the time
            of event emission
          type: string
        actorId:
          description: ActorID is the user id that initiated the request for this
            Event
          type: string
        actorName:
          description: ActorName is the name of the associated user at the time of
            event emission
          type: string
        sessionId:
          description: SessionID is the user that initiated the request for this Event
          type: string
        requestId:
          description: RequestID string
          type: string
        summary:
          description: Summary of the event
          type: string
      required:
      - id
      - key
      - tenantId
      - time
      type: object
    cursor:
      example:
        pages:
          next: 6
          totalItems: 2
          perPage: 5
          previous: 1
          last: 5
          page: 0
        hrefs:
          next: https://openapi-generator.tech
          last: https://openapi-generator.tech
          previous: https://openapi-generator.tech
          first: https://openapi-generator.tech
      properties:
        pages:
          $ref: '#/components/schemas/cursor_pages'
        hrefs:
          $ref: '#/components/schemas/cursor_hrefs'
      required:
      - hrefs
      - pages
      type: object
    v3Environment:
      enum:
      - hosted
      - vpc
      example: hosted
      type: string
    v3Provider:
      enum:
      - aws
      - azure
      - gcp
      example: aws
      type: string
    v3CouchbaseServices:
      enum:
      - data
      - index
      - query
      - search
      - eventing
      - analytics
      type: string
    v3StorageType:
      enum:
      - GP3
      - IO2
      - PD-SSD
      example: GP3
      type: string
    v3SupportPackageTimezones:
      description: |
        * `ET` - Eastern Time
        * `GMT` - Greenwich Mean Time
        * `IST` - India Standard Time
        * `PT` - Pacific Time
      enum:
      - ET
      - GMT
      - IST
      - PT
      example: IST
      type: string
    v3SupportPackageType:
      enum:
      - Basic
      - DeveloperPro
      - Enterprise
      example: DeveloperPro
      type: string
    v3ClusterStatus:
      enum:
      - draft
      - deploying
      - scaling
      - upgrading
      - rebalancing
      - peering
      - destroying
      - healthy
      - degraded
      - deploymentFailed
      - scaleFailed
      - upgradeFailed
      - rebalanceFailed
      - peeringFailed
      - destroyFailed
      example: deploying
      type: string
    v3BucketRoles:
      description: |
        * `data_writer` - Gives the user permission to read and write data for the bucket. * `data_reader` - Gives the user read-only permission for the bucket.
      enum:
      - data_writer
      - data_reader
      type: string
    V3ClusterList_data_items:
      example:
        environment: environment
        cloudId: cloudId
        name: name
        id: id
        projectId: projectId
      properties:
        environment:
          type: string
        cloudId:
          type: string
        id:
          type: string
        name:
          type: string
        projectId:
          type: string
      required:
      - environment
      - id
      - name
      - projectId
      type: object
    V3ClusterList_data:
      example:
        tenantId: tenantId
        items:
        - environment: environment
          cloudId: cloudId
          name: name
          id: id
          projectId: projectId
        - environment: environment
          cloudId: cloudId
          name: name
          id: id
          projectId: projectId
      properties:
        tenantId:
          type: string
        items:
          items:
            $ref: '#/components/schemas/V3ClusterList_data_items'
          type: array
      type: object
    V3Place_hosted:
      description: cluster will be deployed in the managed couchbase capella
      example:
        provider: aws
        CIDR: 10.21.0.0/16
        region: us-west-2
      properties:
        provider:
          $ref: '#/components/schemas/v3Provider'
        region:
          description: A valid region for the cloudProvider
          example: us-west-2
          type: string
        CIDR:
          description: CIDR block.
          example: 10.21.0.0/16
          type: string
      required:
      - CIDR
      - provider
      - region
      type: object
    V3Servers_storage:
      example:
        size: 50
        IOPS: 3000
        type: GP3
      properties:
        type:
          $ref: '#/components/schemas/v3StorageType'
        IOPS:
          description: Required for GP3 and IO2. Min 3000 for GP3, 1000 if IO2. If
            storageType="GP3", max = 16000. If storageType= "IO2", max= 64000
          example: 3000
          type: integer
        size:
          description: Min 50GB, max 16TB
          example: 50
          maximum: 16384
          minimum: 50
          type: integer
      required:
      - size
      - type
      type: object
    V3Cluster_version_components:
      example:
        cbServerVersion: cbServerVersion
      properties:
        cbServerVersion:
          type: string
      required:
      - cbServerVersion
      type: object
    V3Cluster_version:
      example:
        components:
          cbServerVersion: cbServerVersion
        name: name
      properties:
        name:
          type: string
        components:
          $ref: '#/components/schemas/V3Cluster_version_components'
      required:
      - components
      - name
      type: object
    V3Cluster_place:
      example:
        provider: provider
        CIDR: CIDR
        region: region
      properties:
        provider:
          type: string
        region:
          type: string
        CIDR:
          type: string
      required:
      - CIDR
      - provider
      - region
      type: object
    V3Cluster_storage:
      example:
        size: 1
        IOPS: 6
        type: type
      properties:
        type:
          type: string
        IOPS:
          type: integer
        size:
          type: integer
      required:
      - IOPS
      - size
      - type
      type: object
    V3Cluster_servers:
      example:
        compute: compute
        size: 0
        services:
        - services
        - services
        storage:
          size: 1
          IOPS: 6
          type: type
      properties:
        size:
          type: integer
        compute:
          description: Compute instance type
          type: string
        services:
          items:
            type: string
          type: array
        storage:
          $ref: '#/components/schemas/V3Cluster_storage'
      required:
      - compute
      - services
      - size
      - storage
      type: object
    V3UpdateClusterSupportRequest_supportPackage:
      description: |
        One from "Basic", "DeveloperPro" or "Enterprise"
      example:
        timezone: IST
        type: DeveloperPro
      properties:
        timezone:
          $ref: '#/components/schemas/v3SupportPackageTimezones'
        type:
          $ref: '#/components/schemas/v3SupportPackageType'
      required:
      - type
      type: object
    V3CreateClusterUserRequest_buckets:
      example:
        scope: _default
        name: bucket1
      properties:
        name:
          example: bucket1
          type: string
        scope:
          description: enter '*' for getting access to all scopes within a bucket
            or the scope name for getting access to a single scope
          example: _default
          type: string
        access:
          $ref: '#/components/schemas/v3BucketRoles'
      required:
      - access
      - name
      - scope
      type: object
    V3ClusterAuditSettings_disabledUsers:
      example:
        domain: local
        name: name
      properties:
        name:
          description: The name of the user.
          type: string
        domain:
          description: The domain of the user.
          enum:
          - local
          - external
          type: string
      required:
      - name
      type: object
    cursor_pages:
      example:
        next: 6
        totalItems: 2
        perPage: 5
        previous: 1
        last: 5
        page: 0
      properties:
        page:
          description: Current page starting from 1.
          type: integer
        next:
          description: |
            Next page number, it is not set on the last page.
          type: integer
        previous:
          description: |
            Previous page number, it is not set on the first page.
          type: integer
        last:
          description: Last page number.
          type: integer
        perPage:
          description: How many items are displayed in the page.
          type: integer
        totalItems:
          description: Total items found by the given query.
          type: integer
      required:
      - totalItems
      type: object
    cursor_hrefs:
      example:
        next: https://openapi-generator.tech
        last: https://openapi-generator.tech
        previous: https://openapi-generator.tech
        first: https://openapi-generator.tech
      properties:
        first:
          format: uri
          type: string
        last:
          format: uri
          type: string
        previous:
          format: uri
          type: string
        next:
          format: uri
          type: string
      required:
      - first
      type: object
  securitySchemes:
    token:
      scheme: bearer
      type: http
