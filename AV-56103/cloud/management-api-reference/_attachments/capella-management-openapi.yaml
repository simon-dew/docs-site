openapi: 3.0.2
info:
  title: Couchbase Capella Management API
  version: v4.0
  description: |
    The Couchbase Capella Management API provides a set of REST APIs for creating and managing Capella instances.
    It enables users to perform operations such as creating new Capella instances, managing their configurations, and interacting with the Capella services.
    This API documentation specifies the endpoints, request and response formats, and authentication requirements for seamless integration with Couchbase Capella.

    To access the Management API, you need an API key.
    To create an initial bootstrap API key you must use the Capella UI. Once you have created an initial bootstrap API key, you can use the Management API itself to create further API keys.

    To learn more, see [Get Started with the Management API v4.0](https://docs.couchbase.com/cloud/management-api-guide/management-api-start.html).

    [Back to Management API v4.0 Documentation](https://docs.couchbase.com/cloud/management-api-guide/management-api-intro.html)
servers:
  - url: 'https://cloudapi.cloud.couchbase.com'
security:
  - token: []
paths:
  '/v4/organizations/{organizationId}/apikeys':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    post:
      summary: Create API Key
      description: |
        Creates a new API key under an organization.

        Organization Owners can create Organization and Project scoped API keys.

        Organization Members and Project Creators can create Project scoped API keys for which they are Project Owner.

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - apikeys
      operationId: postOrganizationAPIKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAPIKeyRequest'
            examples:
              createOrganizationOwnerAPIKey:
                value:
                  name: Organization Owner API Key
                  description: Creates an API key with a Organization Owner role.
                  expiry: 720
                  allowedCIDRs:
                    - 8.8.8.8/32
                  organizationRoles:
                    - organizationOwner
                  resources: []
              createProjectOwnerAPIKey:
                value:
                  name: Project Owner API Key
                  description: Creates an API key with a Project Owner role.
                  expiry: 720
                  allowedCIDRs:
                    - 8.8.8.8/32
                  organizationRoles:
                    - organizationMember
                  resources:
                    - id: ffffffff-aaaa-1414-eeee-000000000000
                      roles:
                        - projectOwner
      responses:
        '201':
          description: Successfully created an API key under an organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAPIKeyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: List API keys
      description: |
        Lists all the API keys under an organization.

        Organization Owners can list all the API keys inside the Organization.

        Organization Members and Project Creators can list all the Project scoped API key for which they are Project Owner.

        Valid fields to sort the results are: "name", "expiry", "description".

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - apikeys
      operationId: listOrganizationAPIKeys
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortDirection'
      responses:
        '200':
          description: Successfully listed all the apikeys under an organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAPIKeys'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/apikeys/{ApiKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/AccessKey'
    get:
      summary: Get API Key
      description: |
        Fetches the details of the given API key under an organization.

        Organization Owners can get any API key inside the Organization.

        Organization Members and Project Creator can get any Project scoped API key for which they are Project Owner.

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - apikeys
      operationId: getOrganizationAPIKeyByAccessKey
      responses:
        '200':
          description: Successfully fetched the API key by its Access key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAPIKey'
              examples:
                createOrganizationOwnerAPIKey:
                  value:
                    id: IS9DrRsw4KWFS72Zhbj4xmhllHvPcdCL
                    name: Organization Owner API Key
                    description: Creates an API key with an Organization Owner role.
                    expiry: 720
                    allowedCIDRs:
                      - 8.8.8.8/32
                    organizationRoles:
                      - organizationOwner
                    resources: []
                    audit:
                      createdBy: ffffffff-aaaa-1414-eeee-000000000000
                      createdAt: '2021-09-01T12:34:56Z'
                      modifiedBy: ''
                      modifiedAt: '2021-09-01T12:34:56Z'
                      version: 1
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete API Key
      description: |
        Deletes the given API key under an organization.

        Organization Owners can delete any API key inside the Organization.

        Organization Members and Project Creator can delete any Project scoped API key for which they are Project Owner.

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - apikeys
      operationId: deleteOrganizationAPIKey
      responses:
        '204':
          description: Successfully deleted the API key by its Access key.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/apikeys/{ApiKeyId}/rotate':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/AccessKey'
    post:
      summary: Rotate API Key
      description: |
        Rotate the secret of a given API key under an organization.

        Organization Owners can rotate any API key inside the Organization.

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - apikeys
      operationId: postOrganizationAPIKeyRotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RotateAPIKeyRequest'
            examples:
              rotateOrganizationOwnerAPIKey:
                value:
                  secret: GaC4FQLCoUqoKUMBvl6BgRK1Ivqu5yF8OkDBhnP%#CH%S4T@bTVUdP#rY#VSicbx
      responses:
        '200':
          description: Successfully rotated the API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotateAPIKeyResponse'
              examples:
                rotateOrganizationOwnerAPIKey:
                  value:
                    secretKey: GaC4FQLCoUqoKUMBvl6BgRK1Ivqu5yF8OkDBhnP%#CH%S4T@bTVUdP#rY#VSicbx
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    post:
      summary: Create Project
      description: |
        Creates a new project under the organization.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Creator

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - projects
      operationId: postProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        '201':
          description: Successfully created a project under the organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: List Project
      description: |
        Lists all the projects under the organization.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager
        - Project Viewer
        - Database Data Reader/Writer
        - Database Data Reader

        Valid fields to sort the results are: "id", "name".

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - projects
      operationId: listProjects
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortDirection'
      responses:
        '200':
          description: Successfully listed all the projects under the organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
    get:
      summary: Get Project
      description: |
        Fetches the details of the given project.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager
        - Project Viewer
        - Database Data Reader/Writer
        - Database Data Reader

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - projects
      operationId: getProjectByID
      responses:
        '200':
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          description: Successfully fetched the project based on the projectId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update Project
      description: |
        Update project name and or project description.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      parameters:
        - $ref: '#/components/parameters/If-Match'
      tags:
        - projects
      operationId: putProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
      responses:
        '204':
          description: Successfully updated the project metadata.
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete Project
      description: |
        Deletes an existing project.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - projects
      operationId: deleteProjectByID
      responses:
        '204':
          description: Successfully deleted the project by its projectId.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
    post:
      summary: Create Cluster
      description: |
        Creates a new Couchbase Capella provisioned cluster.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - clusters
      operationId: postCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
            examples:
              PostClusterAWSMultipleServiceGroups:
                value:
                  name: Test-Cluster-1
                  description: My first test AWS cluster for multiple services.
                  cloudProvider:
                    type: aws
                    region: us-east-1
                    cidr: 10.1.30.0/23
                  couchbaseServer:
                    version: '7.1'
                  serviceGroups:
                    - node:
                        compute:
                          cpu: 4
                          ram: 16
                        disk:
                          storage: 50
                          type: gp3
                          iops: 3000
                      numOfNodes: 3
                      services:
                        - data
                        - query
                        - index
                        - search
                    - node:
                        compute:
                          cpu: 4
                          ram: 32
                        disk:
                          storage: 50
                          type: io2
                          iops: 3005
                      numOfNodes: 2
                      services:
                        - analytics
                  availability:
                    type: multi
                  support:
                    plan: developer pro
                    timezone: PT
              PostClusterAWSSingleAvailabilityBasicPlan:
                value:
                  name: Test-Cluster-2
                  description: My test AWS cluster for single availability and basic plan.
                  cloudProvider:
                    type: aws
                    region: us-east-1
                    cidr: 10.1.30.0/23
                  couchbaseServer:
                    version: '7.2'
                  serviceGroups:
                    - node:
                        compute:
                          cpu: 4
                          ram: 16
                        disk:
                          storage: 50
                          type: io2
                          iops: 3000
                      numOfNodes: 3
                      services:
                        - data
                        - query
                        - index
                        - search
                  availability:
                    type: single
                  support:
                    plan: basic
                    timezone: PT
              PostClusterAWSWithoutServerVersion:
                value:
                  name: Test-Cluster-6
                  description: My test AWS cluster without Couchbase Server version.
                  cloudProvider:
                    type: aws
                    region: us-east-1
                    cidr: 10.1.30.0/23
                  serviceGroups:
                    - node:
                        compute:
                          cpu: 4
                          ram: 16
                        disk:
                          storage: 50
                          type: gp3
                          iops: 3000
                      numOfNodes: 3
                      services:
                        - data
                        - query
                        - index
                        - search
                    - node:
                        compute:
                          cpu: 4
                          ram: 32
                        disk:
                          storage: 50
                          type: io2
                          iops: 3005
                      numOfNodes: 2
                      services:
                        - analytics
                  availability:
                    type: multi
                  support:
                    plan: developer pro
                    timezone: PT
              PostClusterAWSWithServerVersionAndMaxNodes:
                value:
                  name: Test-Cluster-7
                  description: My test AWS cluster for Couchbase Server version 7.1.0.
                  cloudProvider:
                    type: aws
                    region: us-east-1
                    cidr: 10.1.30.0/23
                  couchbaseServer:
                    version: '7.1'
                  serviceGroups:
                    - node:
                        compute:
                          cpu: 4
                          ram: 16
                        disk:
                          storage: 50
                          type: gp3
                          iops: 3000
                      numOfNodes: 27
                      services:
                        - data
                        - query
                        - index
                        - search
                  availability:
                    type: multi
                  support:
                    plan: developer pro
                    timezone: PT
              PostClusterAWSWithServerWithMaxNodes:
                value:
                  name: Test-Cluster-8
                  description: My test AWS cluster with max nodes.
                  cloudProvider:
                    type: aws
                    region: us-east-1
                    cidr: 10.1.30.0/23
                  couchbaseServer:
                    version: '7.2'
                  serviceGroups:
                    - node:
                        compute:
                          cpu: 4
                          ram: 16
                        disk:
                          storage: 50
                          type: gp3
                          iops: 3000
                      numOfNodes: 3
                      services:
                        - data
                        - query
                        - index
                        - search
                    - node:
                        compute:
                          cpu: 4
                          ram: 32
                        disk:
                          storage: 50
                          type: io2
                          iops: 3005
                      numOfNodes: 24
                      services:
                        - analytics
                  availability:
                    type: single
                  support:
                    plan: developer pro
                    timezone: PT
              PostClusterAzurePremiumDisk:
                value:
                  name: Test-Cluster-3
                  description: My first test Azure cluster.
                  cloudProvider:
                    type: azure
                    region: eastus
                    cidr: 10.1.30.0/23
                  couchbaseServer:
                    version: '7.1'
                  serviceGroups:
                    - node:
                        compute:
                          cpu: 4
                          ram: 16
                        disk:
                          type: P6
                      numOfNodes: 3
                      services:
                        - data
                        - query
                        - index
                        - search
                    - node:
                        compute:
                          cpu: 4
                          ram: 32
                        disk:
                          type: P10
                      numOfNodes: 4
                      services:
                        - analytics
                  availability:
                    type: single
                  support:
                    plan: developer pro
                    timezone: ET
              PostClusterAzureUltraDisk:
                value:
                  name: Test-Cluster-4
                  description: My second test Azure cluster with Ultra.
                  cloudProvider:
                    type: azure
                    region: eastus
                    cidr: 10.1.30.0/23
                  couchbaseServer:
                    version: '7.2'
                  serviceGroups:
                    - node:
                        compute:
                          cpu: 4
                          ram: 16
                        disk:
                          storage: 1024
                          type: Ultra
                          iops: 2000
                      numOfNodes: 3
                      services:
                        - data
                        - query
                        - index
                        - search
                        - analytics
                  availability:
                    type: multi
                  support:
                    plan: developer pro
                    timezone: PT
              PostClusterGCP:
                value:
                  name: Test-Cluster-5
                  description: My first test GCP cluster.
                  cloudProvider:
                    type: gcp
                    region: us-east1
                    cidr: 10.1.30.0/23
                  couchbaseServer:
                    version: '7.1'
                  serviceGroups:
                    - node:
                        compute:
                          cpu: 4
                          ram: 16
                        disk:
                          storage: 64
                          type: pd-ssd
                      numOfNodes: 3
                      services:
                        - data
                        - query
                        - index
                        - search
                  availability:
                    type: single
                  support:
                    plan: basic
                    timezone: ET
      responses:
        '202':
          description: Successfully created a cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: List Clusters
      description: |
        Lists all the clusters under the organization.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager
        - Project Viewer
        - Database Data Reader/Writer
        - Database Data Reader

        Valid fields to sort the results are: "id", "availability", "cloudProvider", "couchbaseServer", "currentState", "name".

        Returned set of clusters is reduced to what the caller has access to view.
        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - clusters
      operationId: listClusters
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortDirection'
      responses:
        '200':
          description: Successfully listed all the clusters under the organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClustersResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
    get:
      summary: Get Cluster
      description: |
        Fetches the details of the given cluster.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
         - Organization Owner
         - Project Owner
         - Project Manager
         - Project Viewer
         - Database Data Reader/Writer
         - Database Data Reader

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - clusters
      operationId: getCluster
      responses:
        '200':
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          description: Successfully fetched the cluster based on the clusterId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update Cluster
      description: |
        Updates an existing cluster.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      parameters:
        - $ref: '#/components/parameters/If-Match'
      tags:
        - clusters
      operationId: putCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
      responses:
        '204':
          description: Successfully submitted request to update cluster.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete Cluster
      description: |
        Deletes an existing cluster.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - clusters
      operationId: deleteCluster
      responses:
        '202':
          description: Successfully deleted the cluster by its clusterId.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/users':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    post:
      summary: Create User
      description: |
        Invites a new user under the organization.

        After making a REST API request, an invitation email is triggered and sent to the user.
        Upon receiving the invitation email, the user is required to click on a provided URL, which will redirect them to a page with a user interface (UI) where they can set their username and password.

        The modification of any personal information related to a user can only be performed by the user through the UI.
        Similarly, the user can solely conduct password updates through the UI.

        The "caller" possessing Organization Owner access rights retains the exclusive user creation capability.
        They hold the authority to assign roles at the organization and project levels.

        At present, our support is limited to the resourceType of "project" exclusively.

        In order to access this endpoint, the provided API key must have the following role:
        - Organization Owner

        To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).
      tags:
        - users
      operationId: postUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
            examples:
              CreateOrganizationMember:
                value:
                  name: John
                  email: john.doe@example.com
                  organizationRoles:
                    - organizationMember
                  resources:
                    - id: 550e8400-e29b-41d4-a716-446655440000
                      type: project
                      roles:
                        - projectViewer
                    - id: 550e8400-e29b-41d4-a716-446655440000
                      type: project
                      roles:
                        - projectDataReaderWriter
                description: 'At present, our support is limited to the resourceType of "project" exclusively. Furthermore, the role designation is solely related to roles at the project level.'
              CreateOrganizationOwner:
                value:
                  name: John
                  email: john.doe@example.com
                  organizationRoles:
                    - organizationOwner
                description: We don't need to explicitly add the resources field if the user is an organizationOwner
      responses:
        '201':
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          description: Successfully sent invite to the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: List Users
      description: |
        Lists all the users in the organization and filter on the basis of projectId.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Organization Member
        - Project Creator

        The results are always limited by the role and scope of the caller's privileges.

        When retrieving a list of users through a GET request, if a user holds the organization owner role, the response will exclude project-level permissions for those users. This is because organization owners have full access to all resources within the organization, making project-level permissions irrelevant for them.

        Valid fields to sort the results are: "id", "name", "email", "status", "inactive".

        To learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html) and [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).
      tags:
        - users
      operationId: listUsers
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortDirection'
        - $ref: '#/components/parameters/ProjectIdQuery'
      responses:
        '200':
          description: Successfully listed all the user in the organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
              examples:
                ApiKeyIsOrgOwner:
                  value:
                    data:
                      - id: ffffffff-aaaa-1414-eeee-000000000000
                        name: John
                        email: john.doe@example.com
                        status: verified
                        inactive: false
                        organizationId: ffffffff-aaaa-1414-eeee-000000000000
                        organizationRoles:
                          - organizationMember
                        lastLogin: '2023-07-17T07:05:39.116Z'
                        region: North America
                        timeZone: '(UTC +5:30) India Standard Time'
                        enableNotifications: false
                        expiresAt: 2023-07-17T07:05:39.116Z
                        resources:
                          - id: f98e6c87-41e3-4faa-9df4-906e8d4f1aaf
                            type: project
                            roles:
                              - projectViewer
                          - id: b7c745ac-9fb8-4b63-a0e4-51230097a169
                            type: project
                            roles:
                              - projectDataReaderWriter
                          - id: 28b67422-63d5-46b1-9234-8ad4a1d2f7be
                            type: project
                            roles:
                              - projectDataReaderWriter
                          - id: e3942eaa-0f52-43da-963d-87a5b6cb3805
                            type: project
                            roles:
                              - projectDataReaderWriter
                        audit:
                          createdBy: ffffffff-aaaa-1414-eeee-000000000000
                          createdAt: 2021-09-01T12:34:56.000Z
                          modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                          modifiedAt: 2021-09-01T12:34:56.000Z
                          version: 1
                    cursor:
                      pages:
                        page: 2
                        next: 3
                        previous: 1
                        last: 10
                        perPage: 10
                        totalItems: 10
                      hrefs:
                        first: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                        last: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                        previous: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                        next: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                  description: 'In the event that the API key holds "organizationOwner" access, information related to all projects within the organization will be returned.'
                ApiKeyIsProjectOwner:
                  value:
                    data:
                      - id: ffffffff-aaaa-1414-eeee-000000000000
                        name: John
                        email: john.doe@example.com
                        status: verified
                        inactive: false
                        organizationId: ffffffff-aaaa-1414-eeee-000000000000
                        organizationRoles:
                          - organizationMember
                        lastLogin: '2023-07-17T07:05:39.116Z'
                        region: North America
                        timeZone: '(UTC +5:30) India Standard Time'
                        enableNotifications: false
                        expiresAt: 2023-07-17T07:05:39.116Z
                        resources:
                          - id: f98e6c87-41e3-4faa-9df4-906e8d4f1aaf
                            type: project
                            roles:
                              - projectViewer
                          - id: b7c745ac-9fb8-4b63-a0e4-51230097a169
                            type: project
                            roles:
                              - projectDataReaderWriter
                        audit:
                          createdBy: ffffffff-aaaa-1414-eeee-000000000000
                          createdAt: 2021-09-01T12:34:56.000Z
                          modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                          modifiedAt: 2021-09-01T12:34:56.000Z
                          version: 1
                    cursor:
                      pages:
                        page: 2
                        next: 3
                        previous: 1
                        last: 10
                        perPage: 10
                        totalItems: 10
                      hrefs:
                        first: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                        last: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                        previous: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                        next: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                  description: 'Assuming an organization with four projects labeled A, B, C, and D, if the API key holds an organizational-level role of "organizationMember" and read access solely to projects C and D, then project-specific information exclusively pertaining to C and D will be returned, regardless of whether they conduct a search based on the projectId.'
                ReturnedUserIsOrganizationOwner:
                  value:
                    data:
                      - id: ffffffff-aaaa-1414-eeee-000000000000
                        name: John
                        email: john.doe@example.com
                        status: verified
                        inactive: false
                        organizationId: ffffffff-aaaa-1414-eeee-000000000000
                        organizationRoles:
                          - organizationOwner
                        lastLogin: '2023-07-17T07:05:39.116Z'
                        region: North America
                        timeZone: '(UTC +5:30) India Standard Time'
                        enableNotifications: false
                        expiresAt: 2023-07-17T07:05:39.116Z
                        audit:
                          createdBy: ffffffff-aaaa-1414-eeee-000000000000
                          createdAt: 2021-09-01T12:34:56.000Z
                          modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                          modifiedAt: 2021-09-01T12:34:56.000Z
                          version: 1
                    cursor:
                      pages:
                        page: 2
                        next: 3
                        previous: 1
                        last: 10
                        perPage: 10
                        totalItems: 10
                      hrefs:
                        first: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                        last: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                        previous: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                        next: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
                  description: 'If the user returned possesses "organizationOwner" access, the resources field will not be returned due to the user''s unrestricted access to all resources within the organization.'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/users/{userId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/CPUserId'
    get:
      summary: Get User
      description: |
        Fetches the details of the given user.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Organization Member
        - Project Creator

        The results are always limited by the role and scope of the caller's privileges.

        When performing a GET request for a user with an organization owner role, the response will exclude project-level permissions for that user. This is because organization owners have access to all resources at the organization level, rendering project-level permissions unnecessary for them.

        To learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html) and [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).
      tags:
        - users
      operationId: getUser
      responses:
        '200':
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          description: Successfully fetched the user based on the userId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      summary: Update User
      description: |
        Updates organizationRole and resources of the user.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        An Organization Owner API key can be utilized to update organizational-level roles and project-level roles for all projects within the organization.

        The Project Owner API key allows for updating project-level roles, solely within the projects where the API key holds the Project Owner role.

        The modification of any personal information related to a user, such as password updates, can only be performed by the respective user through the user interface (UI).

        The results are always limited by the role and scope of the caller's privileges.
        To learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html) and [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).
      tags:
        - users
      operationId: patchUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserRequest'
            examples:
              addOrganizationRole:
                value:
                  - op: add
                    path: /organizationRoles
                    value:
                      - projectCreator
              removeOrganizationRole:
                value:
                  - op: remove
                    path: /organizationRoles
                    value:
                      - projectCreator
              addResource:
                value:
                  - op: add
                    path: '/resources/{resourceId}'
                    value:
                      id: ffffffff-aaaa-1414-eeee-111111111111
                      type: project
                      roles:
                        - projectDataReaderWriter
              removeResourceRole:
                value:
                  - op: remove
                    path: '/resources/{resourceId}/roles'
                    value:
                      - projectViewer
              addResourceRole:
                value:
                  - op: add
                    path: '/resources/{resourceId}/roles'
                    value:
                      - projectManager
              removeResource:
                value:
                  - op: remove
                    path: '/resources/{resourceId}'
              performMultipleOperations:
                value:
                  - op: add
                    path: /organizationRoles
                    value:
                      - projectCreator
                  - op: remove
                    path: '/resources/{resourceId}'
      responses:
        '200':
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          description: Successfully updated the user metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
              examples:
                addOrganizationRole:
                  value:
                    id: ffffffff-aaaa-1414-eeee-000000000000
                    name: Jane
                    email: jane.doe@example.com
                    status: verified
                    inactive: false
                    organizationId: ffffffff-aaaa-1414-eeee-000000000000
                    organizationRoles:
                      - organizationMember
                      - projectCreator
                    lastLogin: '2023-07-17T07:05:39.116Z'
                    region: North America
                    timeZone: '(UTC +5:30) India Standard Time'
                    enableNotifications: false
                    expiresAt: 2023-07-17T07:05:39.116Z
                    resources:
                      - id: b7c745ac-9fb8-4b63-a0e4-51230097a169
                        type: project
                        roles:
                          - projectViewer
                      - id: 28b67422-63d5-46b1-9234-8ad4a1d2f7be
                        type: project
                        roles:
                          - projectDataReaderWriter
                    audit:
                      createdBy: ffffffff-aaaa-1414-eeee-000000000000
                      createdAt: 2021-09-01T12:34:56.000Z
                      modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                      modifiedAt: 2021-09-01T12:34:56.000Z
                      version: 2
                removeOrganizationRole:
                  value:
                    id: ffffffff-aaaa-1414-eeee-000000000000
                    name: John
                    email: john.doe@example.com
                    status: verified
                    inactive: false
                    organizationId: ffffffff-aaaa-1414-eeee-000000000000
                    organizationRoles:
                      - organizationMember
                    lastLogin: '2023-07-17T07:05:39.116Z'
                    region: North America
                    timeZone: '(UTC +5:30) India Standard Time'
                    enableNotifications: false
                    expiresAt: 2023-07-17T07:05:39.116Z
                    resources:
                      - id: 28b67422-63d5-46b1-9234-8ad4a1d2f7be
                        type: project
                        roles:
                          - projectViewer
                      - id: b7c745ac-9fb8-4b63-a0e4-51230097a169
                        type: project
                        roles:
                          - projectDataReaderWriter
                    audit:
                      createdBy: ffffffff-aaaa-1414-eeee-000000000000
                      createdAt: 2021-09-01T12:34:56.000Z
                      modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                      modifiedAt: 2021-09-01T12:34:56.000Z
                      version: 2
                addResource:
                  value:
                    id: ffffffff-aaaa-1414-eeee-000000000000
                    name: John
                    email: john.doe@example.com
                    status: verified
                    inactive: false
                    organizationId: ffffffff-aaaa-1414-eeee-000000000000
                    organizationRoles:
                      - organizationMember
                    lastLogin: '2023-07-17T07:05:39.116Z'
                    region: North America
                    timeZone: '(UTC +5:30) India Standard Time'
                    enableNotifications: false
                    expiresAt: 2023-07-17T07:05:39.116Z
                    resources:
                      - id: ffffffff-aaaa-1414-eeee-000000000000
                        type: project
                        roles:
                          - projectViewer
                      - id: ffffffff-aaaa-1414-eeee-111111111111
                        type: project
                        roles:
                          - projectDataReaderWriter
                    audit:
                      createdBy: ffffffff-aaaa-1414-eeee-000000000000
                      createdAt: 2021-09-01T12:34:56.000Z
                      modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                      modifiedAt: 2021-09-01T12:34:56.000Z
                      version: 2
                removeResourceRole:
                  value:
                    id: ffffffff-aaaa-1414-eeee-000000000000
                    name: John
                    email: john.doe@example.com
                    status: verified
                    inactive: false
                    organizationId: ffffffff-aaaa-1414-eeee-000000000000
                    organizationRoles:
                      - organizationMember
                    lastLogin: '2023-07-17T07:05:39.116Z'
                    region: North America
                    timeZone: '(UTC +5:30) India Standard Time'
                    enableNotifications: false
                    expiresAt: 2023-07-17T07:05:39.116Z
                    resources:
                      - id: b7c745ac-9fb8-4b63-a0e4-51230097a169
                        type: project
                        roles:
                          - projectDataReaderWriter
                    audit:
                      createdBy: ffffffff-aaaa-1414-eeee-000000000000
                      createdAt: 2021-09-01T12:34:56.000Z
                      modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                      modifiedAt: 2021-09-01T12:34:56.000Z
                      version: 2
                addResourceRole:
                  value:
                    id: ffffffff-aaaa-1414-eeee-000000000000
                    name: John
                    email: john@example.com
                    status: verified
                    inactive: false
                    organizationId: ffffffff-aaaa-1414-eeee-000000000000
                    organizationRoles:
                      - organizationMember
                    lastLogin: '2023-07-17T07:05:39.116Z'
                    region: North America
                    timeZone: '(UTC +5:30) India Standard Time'
                    enableNotifications: false
                    expiresAt: 2023-07-17T07:05:39.116Z
                    resources:
                      - id: b7c745ac-9fb8-4b63-a0e4-51230097a169
                        type: project
                        roles:
                          - projectViewer
                          - projectManager
                    audit:
                      createdBy: ffffffff-aaaa-1414-eeee-000000000000
                      createdAt: 2021-09-01T12:34:56.000Z
                      modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                      modifiedAt: 2021-09-01T12:34:56.000Z
                      version: 2
                removeResource:
                  value:
                    id: ffffffff-aaaa-1414-eeee-000000000000
                    name: John
                    email: john.doe@example.com
                    status: verified
                    inactive: false
                    organizationId: ffffffff-aaaa-1414-eeee-000000000000
                    organizationRoles:
                      - organizationMember
                    lastLogin: '2023-07-17T07:05:39.116Z'
                    region: North America
                    timeZone: '(UTC +5:30) India Standard Time'
                    enableNotifications: false
                    expiresAt: 2023-07-17T07:05:39.116Z
                    audit:
                      createdBy: ffffffff-aaaa-1414-eeee-000000000000
                      createdAt: 2021-09-01T12:34:56.000Z
                      modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                      modifiedAt: 2021-09-01T12:34:56.000Z
                      version: 2
                performMultipleOperation:
                  value:
                    id: ffffffff-aaaa-1414-eeee-000000000000
                    name: John
                    email: john.doe@example.com
                    status: verified
                    inactive: false
                    organizationId: ffffffff-aaaa-1414-eeee-000000000000
                    organizationRoles:
                      - organizationMember
                      - projectCreator
                    lastLogin: '2023-07-17T07:05:39.116Z'
                    region: North America
                    timeZone: '(UTC +5:30) India Standard Time'
                    enableNotifications: false
                    expiresAt: 2023-07-17T07:05:39.116Z
                    audit:
                      createdBy: ffffffff-aaaa-1414-eeee-000000000000
                      createdAt: 2021-09-01T12:34:56.000Z
                      modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                      modifiedAt: 2021-09-01T12:34:56.000Z
                      version: 2
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete User
      description: |
        Removes user from the organization.

        In order to access this endpoint, the provided API key must have the following role:
        - Organization Owner

        To learn more about the roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).
      tags:
        - users
      operationId: deleteUser
      responses:
        '204':
          description: Successfully removed the user from the organization.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/allowedcidrs':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
    post:
      summary: Create Allowed CIDR
      description: |
        Adds a trusted CIDR to a cluster's list of allowed CIDRs.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).

        Note that updating this resource is not supported; you must delete and recreate allowed CIDRs instead. As a result, ETags are also not supported for this resource.
      tags:
        - allowedCIDRs(Cluster)
      operationId: postAllowedCidrs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAllowedCidrRequest'
      responses:
        '201':
          description: Successfully added an allowed CIDR for the cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAllowedCidrResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: List Allowed CIDRs
      description: |
        Lists all of the allowed CIDRs for a given cluster.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager
        - Project Viewer
        - Database Data Reader/Writer
        - Database Data Reader

        Valid fields to sort the results are: "id", "type", "status".

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - allowedCIDRs(Cluster)
      operationId: listAllowedCidrs
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortDirection'
      responses:
        '200':
          description: Successfully listed all allowed CIDRs for the cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllowedCidrsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/allowedcidrs/{allowedCidrId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
      - $ref: '#/components/parameters/AllowedCidrId'
    get:
      summary: Get Allowed CIDR
      description: |
        Fetches the details for the specified allowed CIDR.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager
        - Project Viewer
        - Database Data Reader/Writer
        - Database Data Reader

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - allowedCIDRs(Cluster)
      operationId: getAllowedCidrByID
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowedCidr'
          description: Successfully fetched the allowed CIDR details.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete Allowed CIDR
      description: |
        Deletes the existing allowed CIDR.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - allowedCIDRs(Cluster)
      operationId: deleteAllowedCidrByID
      responses:
        '204':
          description: Successfully deleted the allowed CIDR by its ID.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/users':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
    get:
      summary: List Database Credentials
      description: |
        Lists all the database credential information under a cluster.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
         - Organization Owner
         - Project Owner
         - Project Manager
         - Project Viewer

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - databaseCredentials
      operationId: listDatabaseCredentials
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortDirection'
      responses:
        '200':
          description: Successfully listed all the database credentials under the cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatabaseCredentialsResponse'
              examples:
                GetAllDatabaseCredentials:
                  value:
                    cursor:
                      pages:
                        page: 2
                        next: 3
                        previous: 1
                        last: 10
                        perPage: 10
                        totalItems: 10
                      hrefs:
                        first: 'https://cloud.couchbase.com/v4/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000?page=2&perPage=10'
                        last: 'https://cloud.couchbase.com/v4/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000?page=10&perPage=10'
                        previous: 'https://cloud.couchbase.com/v4/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000?page=1&perPage=10'
                        next: 'https://cloud.couchbase.com/v4/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000/ffffffff-aaaa-1414-eeee-000000000000?page=3&perPage=10'
                    data:
                      - id: ffffffff-aaaa-1414-eeee-000000000000
                        name: ReadInventory
                        audit:
                          createdBy: ffffffff-aaaa-1414-eeee-000000000000
                          createdAt: '2021-09-01T12:34:56Z'
                          modifiedBy: ffffffff-aaaa-1414-eeee-000000000000
                          modifiedAt: '2021-09-01T12:34:56Z'
                          version: 1
                        access:
                          - privileges:
                              - read
                              - write
                            resources:
                              buckets:
                                - name: travel-sample
                                  scopes:
                                    - name: inventory
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create Database Credentials
      description: |
        Creates a new database credential under a cluster.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        Valid fields to sort the results are: "id", "name".

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - databaseCredentials
      operationId: postDatabaseCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseCredentialRequest'
            examples:
              ReadWriteOnSomeCollections:
                value:
                  name: ReadWriteOnSpecificCollections
                  access:
                    - privileges:
                        - read
                        - write
                      resources:
                        buckets:
                          - name: travel-sample
                            scopes:
                              - name: inventory
                                collections:
                                  - airport
                                  - airline
              ReadAndWriteOnAllCollectionsInABucketAndScope:
                value:
                  name: ReadWriteOnAllCollectionsInAScopeAndBucket
                  access:
                    - privileges:
                        - read
                        - write
                      resources:
                        buckets:
                          - name: travel-sample
                            scopes:
                              - name: inventory
              ReadAccessOnAllBuckets:
                value:
                  name: ReadAccessForAllBuckets
                  access:
                    - privileges:
                        - read
              SeparateAccessForDifferentScopes:
                value:
                  name: SeparateAccessForDifferentScopes
                  access:
                    - privileges:
                        - read
                      resources:
                        buckets:
                          - name: travel-sample
                            scopes:
                              - name: inventory
                    - privileges:
                        - write
                      resources:
                        buckets:
                          - name: travel-sample
                            scopes:
                              - name: sales
              WriteAccessForAllBuckets:
                value:
                  name: WriteAccessForAllBuckets
                  access:
                    - privileges:
                        - write
              MultipleLevelOfAccess:
                value:
                  name: MultipleLevelOfAccess
                  access:
                    - privileges:
                        - read
                      resources:
                        buckets:
                          - name: travel-sample
                            scopes:
                              - name: inventory
                                collections:
                                  - airport
                                  - airline
                    - privileges:
                        - write
                      resources:
                        buckets:
                          - name: travel-sample
                            scopes:
                              - name: inventory
                                collections:
                                  - sales
      responses:
        '201':
          description: Successfully created a database access record under a cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatabaseCredentialResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/appservices':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: List AppServices
      description: |
        Lists all the clusters under the organization.

        In order to access this endpoint, the provided API key must have at least one of the roles referenced below:
        - Organization Owner
        - Project Owner
        - Project Manager
        - Project Viewer
        - Database Data Reader/Writer
        - Database Data Reader

        Returned set of clusters is reduced to what the caller has access to view.
        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - appServices
      operationId: listAppServices
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortDirection'
        - $ref: '#/components/parameters/ProjectIdQuery'
      responses:
        '200':
          description: Successfully listed appservices matching query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppServicesResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
    post:
      summary: Create App Service
      description: |
        Creates a new App Service.

        In order to access this endpoint, the provided API key must have at least one of the roles referenced below:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - appServices
      operationId: postAppService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppServicerRequest'
      responses:
        '201':
          description: Successfully created an App Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppServicesResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/appservices/{appServiceId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
      - $ref: '#/components/parameters/AppServiceId'
    get:
      summary: Get AppService
      description: |
        Fetches the details of the given App Service.

        In order to access this endpoint, the provided API key must have at least one of the roles referenced below:
         - Organization Owner
         - Project Owner
         - Project Manager
         - Project Viewer
         - Database Data Reader/Writer
         - Database Data Reader

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - appServices
      operationId: getAppService
      responses:
        '200':
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          description: Successfully fetched the App Service based on the appServiceId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppServiceResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete App Service
      description: |
        Deletes an existing App Service.

        In order to access this endpoint, the provided API key must have at least one of the roles referenced below:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - appServices
      operationId: deleteAppService
      responses:
        '202':
          description: Successfully deleted the App Service by its appServiceId.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update AppService specs.
      description: |
        Updates an existing App Service.

        In order to access this endpoint, the provided API key must have at least one of the roles referenced below:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      parameters:
        - $ref: '#/components/parameters/If-Match'
      tags:
        - appServices
      operationId: putAppService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppServiceRequest'
      responses:
        '204':
          description: Successfully updated the App Service metadata.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/users/{userId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Get Database Credentials
      description: |
        Fetches the details of a given cluster's database credential information.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
         - Organization Owner
         - Project Owner
         - Project Manager
         - Project Viewer

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - databaseCredentials
      operationId: getDatabaseCredential
      responses:
        '200':
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          description: Successfully fetched the cluster's database credential information based on the userId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatabaseCredentialResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update Database Credentials
      description: |
        Updates an existing database credential.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      parameters:
        - $ref: '#/components/parameters/If-Match'
      tags:
        - databaseCredentials
      operationId: putDatabaseCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatabaseCredentialRequest'
            examples:
              UpdateDatabaseCredentials:
                value:
                  access:
                    - privileges:
                        - read
                        - write
                      resources:
                        buckets:
                          - name: travel-sample
                            scopes:
                              - name: inventory
                                collections:
                                  - airport
                                  - airline
                                  - tickets
      responses:
        '204':
          description: Successfully updated the access in the cluster's database credential.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete Database Credentials
      description: |
        Deletes an existing cluster's database credential.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - databaseCredentials
      operationId: deleteDatabaseCredential
      responses:
        '204':
          description: Successfully deleted the cluster's database access record by its userId.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
    post:
      summary: Create Bucket
      description: |
        Creates a new bucket configuration under a cluster.

        To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - buckets
      operationId: postBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBucketRequest'
            examples:
              PostBucketTypeCouchbase:
                value:
                  name: CBExample1
                  type: couchbase
                  storageBackend: couchstore
                  memoryAllocationInMb: 105
                  bucketConflictResolution: seqno
                  durabilityLevel: majorityAndPersistActive
                  replicas: 2
                  flush: true
                  timeToLiveInSeconds: 100
              PostBucketTypeEphemeral:
                value:
                  name: EPExample2
                  type: ephemeral
                  memoryAllocationInMb: 105
                  bucketConflictResolution: seqno
                  durabilityLevel: majority
                  replicas: 2
                  flush: true
                  timeToLiveInSeconds: 100
                  evictionPolicy: nruEviction
              PostBucketWithDefaults:
                value:
                  name: test-default-bucket
              PostBucketWithEphemeralDefaults:
                value:
                  name: ephemeral-default
                  type: ephemeral
              PostBucketWithPersistToMajority:
                value:
                  name: test-cb2
                  memoryAllocationInMb: 120
                  bucketConflictResolution: seqno
                  durabilityLevel: persistToMajority
              PostBucketWithEphemeralNoEviction:
                value:
                  name: testEph
                  type: ephemeral
                  evictionPolicy: nruEviction
                  durabilityLevel: majority
                  replicas: 2
                  flush: true
                  timeToLiveInSeconds: 100
              PostBucketWithCouchbaseMagma:
                value:
                  name: testCbMagmadefault
                  type: couchbase
                  storageBackend: magma
      responses:
        '201':
          description: Successfully created a bucket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBucketResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: List Buckets
      description: |
        Lists all the buckets under the cluster.

        To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager
        - Project Viewer
        - Database Data Reader/Writer
        - Database Data Reader

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - buckets
      operationId: listBuckets
      responses:
        '200':
          description: Successfully listed all the buckets under the cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBucketsResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
      - $ref: '#/components/parameters/BucketId'
    get:
      summary: Get Bucket
      description: |
        Fetches the configuration of the given bucket.

        To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager
        - Project Viewer
        - Database Data Reader/Writer
        - Database Data Reader

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - buckets
      operationId: getBucketByID
      responses:
        '200':
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          description: Successfully fetched the bucket based on the bucketId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBucketResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update Bucket
      description: |
        Updates an existing bucket.

        To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - buckets
      operationId: putBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBucketRequest'
      responses:
        '204':
          description: Successfully accepted updated bucket configuration.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete Bucket
      description: |
        Deletes an existing bucket.

        To learn more about bucket configuration, see [Buckets](https://docs.couchbase.com/server/current/learn/buckets-memory-and-storage/buckets.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - buckets
      operationId: deleteBucketByID
      responses:
        '204':
          description: Successfully deleted the bucket by its bucketId.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    get:
      summary: Get Organization
      description: |
        Fetches the details of an organization by ID.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Creator
        - Organization Member

        To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).
      tags:
        - organizations
      operationId: getOrganizationByID
      responses:
        '200':
          description: Successfully returned the organization details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrganizationResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v4/organizations:
    get:
      summary: List Organizations
      description: |
        Returns a list of all organizations the user has access to.

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Creator
        - Organization Member

        To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).
      tags:
        - organizations
      operationId: listOrganizations
      responses:
        '200':
          description: Successfully listed all the organizations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrganizationsResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/certificates':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
    get:
      summary: Get Certificate
      description: |
        In order to access this endpoint, the provided API key must have at least one of the following roles:
          - Organization Owner
          - Project Owner
          - Project Manager
          - Project Viewer
          - Database Data Reader/Writer
          - Database Data Reader

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - certificates
      operationId: getCertificate
      responses:
        '200':
          description: Successfully returned a self-signed certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCertificateResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/backups':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
      - $ref: '#/components/parameters/BucketId'
    post:
      summary: Create Backup
      description: |
        Creates an on-demand backup for a bucket.

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backups & restore
      operationId: postBackup
      responses:
        '202':
          description: Successfully created an on-demand backup for a bucket.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/backups':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
    get:
      summary: List Cluster Backups
      description: |
        Lists the latest backup for all buckets in a cluster.

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backups & restore
      operationId: listClusterBackups
      responses:
        '200':
          description: Successfully listed the latest backups for all buckets under the cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/backups/{backupId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
      - $ref: '#/components/parameters/BackupId'
    get:
      summary: Get Backup
      description: |
        Fetches the details of an existing backup.

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backups & restore
      operationId: getBackupByID
      responses:
        '200':
          description: Successfully fetched the backup by its backupId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupByIDResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete Backup
      description: |
        Deletes an existing backup.

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backups & restore
      operationId: deleteBackupCycleByID
      responses:
        '202':
          description: Successfully deleted the backup by its backupId.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/backup/schedules':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
      - $ref: '#/components/parameters/BucketId'
    post:
      summary: Create Backup Schedule
      description: |
        Creates a scheduled backup for a bucket.

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backup schedule
      operationId: postBackupSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduledBackupRequest'
            examples:
              CreateScheduledBackup:
                value:
                  type: weekly
                  weeklySchedule:
                    dayOfWeek: sunday
                    startAt: 10
                    incrementalEvery: 4
                    retentionTime: 90days
                    costOptimizedRetention: false
      responses:
        '202':
          description: Successfully created a scheduled backup for a bucket.
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      summary: Get Backup Schedule
      description: |
        Fetched the backup schedule for a bucket in a cluster.

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backup schedule
      operationId: getBackupSchedule
      responses:
        '200':
          description: Successfully listed all backups for a bucket under the cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScheduledBackupResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update Backup Schedule
      description: |
        Updates an existing backup schedule.

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backup schedule
      operationId: putBackupSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduledBackupRequest'
      responses:
        '204':
          description: Successfully updated backup schedule.
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete Backup Schedule
      description: |
        Deletes an existing backup schedule

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner
        - Project Manager

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backup schedule
      operationId: deleteBackupSchedule
      responses:
        '202':
          description: Successfully deleted the backup schedule.
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/backup/cycles':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
      - $ref: '#/components/parameters/BucketId'
    get:
      summary: List Cycles
      description: |
        Lists the cycles for a bucket in a cluster.

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backup schedule
      operationId: listCycles
      parameters:
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
      responses:
        '200':
          description: Successfully listed all cycles for a bucket in the cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCyclesResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/buckets/{bucketId}/backup/cycles/{cycleId}':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
      - $ref: '#/components/parameters/BucketId'
      - $ref: '#/components/parameters/CycleId'
    get:
      summary: List Backups
      description: |
        Lists the backups for a cycle in a bucket.

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backup schedule
      operationId: listBackups
      responses:
        '200':
          description: Successfully listed the backups for a cycle in a bucket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v4/organizations/{organizationId}/projects/{projectId}/clusters/{clusterId}/backups/{backupId}/restore':
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/ProjectId'
      - $ref: '#/components/parameters/ClusterId'
      - $ref: '#/components/parameters/BackupId'
    post:
      summary: Restore Backup
      description: |
        Creates an on-demand restore job for a backup immediately.

        To learn more about backup and restore, see [Backup and Restore Data](https://docs.couchbase.com/cloud/clusters/backup-restore.html).

        In order to access this endpoint, the provided API key must have at least one of the following roles:
        - Organization Owner
        - Project Owner

        To learn more, see [Organization, Project, and Database Access Overview](https://docs.couchbase.com/cloud/organizations/organization-projects-overview.html).
      tags:
        - backups & restore
      operationId: postRestore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOnDemandRestoreRequest'
      responses:
        '202':
          description: Successfully created an on-demand restore for a bucket.
        '403':
          $ref: '#/components/responses/AccessForbidden'
        '404':
          $ref: '#/components/responses/ResourceNotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
tags:
  - name: apikeys
    description: Couchbase Capella Public API uses a Bearer token mechanism for authentication; each call to the Public API has to be authenticated by API key.
  - name: projects
    description: |
      Projects contain and allow access to Couchbase databases.
      Projects are used to organize and manage groups of Couchbase databases within organizations.
      An organization can contain any number of projects, and a project can contain any number of databases.
  - name: clusters
    description: |
      A Couchbase cluster consists of one or more instances of Couchbase Capella, each running on an independent node.
      Data and services are shared across the cluster.
      A cluster may be referred to as a "database" in the documentation and in the Couchbase Capella user interface.
  - name: users
    description: |
      To access an organization, your Couchbase Capella user account must be added to it.
      Accounts are added to an organization using email invitations sent from Capella by a user with the Organization Owner organization role.
      All organization users are given one or more organization roles that define what they can view and manage in their organization.
  - name: allowedCIDRs(Cluster)
    description: |
      Couchbase Capella only allows trusted IP addresses to connect to databases.
      Each database has a configurable Allowed IP list that can include up to 75 entries.
      Each entry can be a single IP address or an IP address space.
      Any IP address you add to this list can have a user-specified expiration time for temporary access, or be permanent.
      Capella automatically denies any connection attempts to and from an IP not in the allowed IP list.
  - name: databaseCredentials
    description: |
      Database credentials provide programmatic and application-level access to data on a database.
      Only database credentials can access data.
  - name: buckets
    description: |
      A bucket is the fundamental space for storing data in Couchbase Capella.
      Each bucket contains a hierarchy of scopes and collections to group keys and values logically.
  - name: organizations
    description: |
      Couchbase Capella uses an ordered hierarchy to help you keep all of your data organized and securely accessible.
      The entity at the top of the hierarchy is called an organization.
      Everything you do in Capella, whether it's creating a cluster or managing billing, happens within the scope of an organization.
  - name: certificates
    description: |
      Couchbase Capella supports the use of x.509 certificates, for clients and servers.
      This ensures that only approved users, applications, machines, and endpoints have access to system resources.
      Consequently, the mechanism can be used by Couchbase SDK clients to access Couchbase Services, and by source clusters that use XDCR to replicate data to target clusters.
      Clients can verify the identity of Couchbase Capella, thereby ensuring that they are not exchanging data with a rogue entity.
  - name: backups & restore
    description: |
      Couchbase supports a robust scheduled backup and retention time policy as part of an overall disaster recovery plan for production data.
      Couchbase Capella supports scheduled and on-demand backups of bucket data.
      A backup can be restored to the same database where it was created or another database in the same organization.
      An on-demand backup of a bucket is always a Full backup.
      Capella schedules on-demand backup to start immediately.
  - name: backup schedule
    description: |
      Couchbase supports a robust scheduled backup and retention time policy as part of an overall disaster recovery plan for production data.
      Couchbase Capella supports scheduled and on-demand backups of bucket data.
      A backup can be restored to the same database where it was created or another database in the same organization.
      On setting up a backup schedule, the bucket automatically backs up the bucket based on the chosen schedule.
  - name: appServices
    description: |
      App Services synchronizes data between the Couchbase Capella database and your apps running on mobile applications.
      App Services is a fully managed application backend designed to provide data synchronization for mobile/IoT applications and the Capella Cloud Service.
components:
  parameters:
    If-Match:
      name: If-Match
      in: header
      description: A precondition header that specifies the entity tag of a resource.
      schema:
        type: string
        example: 'Version: 12'
    OrganizationId:
      name: organizationId
      description: |
        The GUID4 ID of the organization.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: ffffffff-aaaa-1414-eeee-000000000000
    ProjectId:
      name: projectId
      description: The GUID4 ID of the project.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: ffffffff-aaaa-1414-eeee-000000000000
    ClusterId:
      name: clusterId
      description: The GUID4 ID of the cluster.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: ffffffff-aaaa-1414-eeee-000000000000
    AllowedCidrId:
      name: allowedCidrId
      description: The GUID4 ID of the allowed CIDR.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: ffffffff-aaaa-1414-eeee-000000000000
    BucketId:
      name: bucketId
      description: The ID of the bucket. It is the URL-compatible base64 encoding of the bucket name.
      in: path
      required: true
      schema:
        type: string
        example: dGVzdA
    AccessKey:
      name: ApiKeyId
      description: |
        The ID (Access key) of the API key.
      in: path
      required: true
      schema:
        type: string
        example: ffffffffaaaa1414eeee000000000000
    BackupId:
      name: backupId
      description: The GUID4 ID of the backup.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: ffffffff-aaaa-1414-eeee-000000000000
    AppServiceId:
      name: appServiceId
      description: The GUID4 ID of the appService.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: ffffffff-aaaa-1414-eeee-000000000000
    CycleId:
      name: cycleId
      description: The GUID4 ID of the cycle.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: ffffffff-aaaa-1414-eeee-000000000000
    UserId:
      name: userId
      description: The GUID4 ID of the database credential.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: ffffffff-aaaa-1414-eeee-000000000000
    CPUserId:
      name: userId
      description: The GUID4 ID of the control plane user.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: ffffffff-aaaa-1414-eeee-000000000000
    Page:
      in: query
      name: page
      description: Sets the page you would like to view.
      required: false
      schema:
        type: integer
    PerPage:
      in: query
      name: perPage
      description: Sets the number of results you would like to have on each page.
      required: false
      schema:
        type: integer
    SortBy:
      in: query
      name: sortBy
      description: Sets the order of how you would like to sort the results and the key you would like to order by.
      example:
        - name
      required: false
      schema:
        type: array
        items:
          type: string
    SortDirection:
      in: query
      name: sortDirection
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
      description: The order in which the items will be sorted.
      example: asc
    FilterByClusterId:
      name: clusterId
      description: |
        Filters by clusterId.
      in: query
      schema:
        type: string
        format: uuid
        description: Filter to fetch appservices belonging to a particular cluster.
    ProjectIdQuery:
      name: projectId
      description: The GUID4 ID of the project.
      in: query
      schema:
        type: string
        format: uuid
        example: ffffffff-aaaa-1414-eeee-000000000000
    StartDate:
      name: startDate
      description: |
        Filters bucket backups beginning from the start date.
        Specify the start date to retrieve relevant bucket backups from start date.
      in: query
      schema:
        type: string
        format: date
        description: Filter to fetch bucket backups.
        example: '2023-07-19'
    EndDate:
      name: endDate
      description: |
        Filters bucket backups till the end date.
        Specify the end date to retrieve relevant bucket backups till end date.
      in: query
      schema:
        type: string
        format: date
        description: Filter to fetch bucket backups.
        example: '2023-07-21'
  schemas:
    CouchbaseAuditData:
      type: object
      required:
        - createdBy
        - createdAt
        - modifiedBy
        - modifiedAt
        - version
      properties:
        createdBy:
          type: string
          description: |
            The user who created the resource; this will be a UUID4 ID for standard
            users and will be a string such as "internal-support" for internal
            Couchbase support users.
          example: ffffffff-aaaa-1414-eeee-000000000000
        createdAt:
          type: string
          format: date-time
          description: |
            The RFC3339 timestamp associated with when the resource was initially
            created.
          example: '2021-09-01T12:34:56Z'
        modifiedBy:
          type: string
          description: |
            The user who last modified the resource; this will be a UUID4 ID for
            standard users and wilmal be a string such as "internal-support" for
            internal Couchbase support users.
          example: ffffffff-aaaa-1414-eeee-000000000000
        modifiedAt:
          type: string
          format: date-time
          description: |
            The RFC3339 timestamp associated with when the resource was last modified.
          example: '2021-09-01T12:34:56Z'
        version:
          type: integer
          description: |
            The version of the document. This value is incremented each time the
            resource is modified.
          example: 1
    Cursor:
      type: object
      required:
        - pages
        - hrefs
      properties:
        pages:
          $ref: '#/components/schemas/Pages'
        hrefs:
          $ref: '#/components/schemas/Hrefs'
    Error:
      type: object
      required:
        - httpStatusCode
        - message
        - code
        - hint
      properties:
        httpStatusCode:
          type: integer
        code:
          type: integer
        message:
          type: string
        hint:
          type: string
    Pages:
      type: object
      required:
        - page
        - last
        - perPage
        - totalItems
      properties:
        page:
          description: 'Current page of results, starting from page 1.'
          type: integer
          example: 2
        next:
          description: |
            Number of the next page of results. Not set on the last page.
          type: integer
          example: 3
        previous:
          description: |
            Number of the previous page of results. Not set on the first page.
          type: integer
          example: 1
        last:
          type: integer
          description: Number of the last page of results.
          example: 10
        perPage:
          type: integer
          description: Number of items displayed in each page.
          example: 10
        totalItems:
          type: integer
          description: Total items found by the given query.
          example: 10
    Hrefs:
      type: object
      required:
        - first
        - last
        - previous
        - next
      properties:
        first:
          type: string
          format: uri
          description: 'The base URL, endpoint, and path parameters required to fetch the first page of results.'
          example: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
        last:
          type: string
          format: uri
          description: 'The base URL, endpoint, and path parameters required to fetch the last page of results.'
          example: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
        previous:
          type: string
          format: uri
          description: |
            The base URL, endpoint, and path parameters required to fetch the previous page of results.
            Empty if there is no previous page.
          example: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
        next:
          type: string
          format: uri
          description: |
            The base URL, endpoint, and path parameters required to fetch the next page of results.
            Empty if there is no next page.
          example: 'https://cloud.couchbase.com/v4/users?page=1&perPage=10'
    CreateProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the project (up to 128 characters).
          maxLength: 128
          example: My Project
        description:
          type: string
          description: A short description of the project (up to 256 characters).
          maxLength: 256
          example: My awesome project
    CreateProjectResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the project created.
    GetProjectResponse:
      type: object
      required:
        - id
        - description
        - name
        - audit
      properties:
        id:
          type: string
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: A GUID4 identifier of the project.
          format: uuid
        description:
          type: string
          example: The description of my awesome project
          description: The description of a particular project.
        name:
          type: string
          example: My-Awesome-Project
          description: The name of the project.
        audit:
          $ref: '#/components/schemas/CouchbaseAuditData'
    GetProjectsResponse:
      type: object
      required:
        - data
        - cursor
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetProjectResponse'
        cursor:
          $ref: '#/components/schemas/Cursor'
    UpdateProjectRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The new project name (up to 128 characters).
          maxLength: 128
          example: My-New-Project
        description:
          type: string
          description: The new project description (up to 256 characters).
          maxLength: 256
          example: The extended description of my awesome project.
    UpdateProjectResponse:
      type: object
      required:
        - id
        - description
        - name
        - audit
      properties:
        id:
          type: string
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: A GUID4 identifier of the project.
          format: uuid
        description:
          type: string
          example: The extended description of my awesome project.
          description: The description of the updated project.
        name:
          type: string
          example: My-New-Project
          description: The name of the updated project.
        audit:
          $ref: '#/components/schemas/CouchbaseAuditData'
    CreateClusterRequest:
      type: object
      required:
        - name
        - cloudProvider
        - serviceGroups
        - availability
        - support
      properties:
        name:
          type: string
          description: Name of the cluster (up to 256 characters).
          example: Test Cluster
          maxLength: 256
        description:
          type: string
          description: Description of the cluster (up to 1024 characters).
          example: Description of the cluster
          maxLength: 1024
        cloudProvider:
          $ref: '#/components/schemas/CloudProvider'
        couchbaseServer:
          $ref: '#/components/schemas/CouchbaseServer'
        serviceGroups:
          type: array
          description: The couchbase service groups to be run. At least one service group must contain the data service.
          minItems: 1
          items:
            $ref: '#/components/schemas/ServiceGroup'
        availability:
          $ref: '#/components/schemas/Availability'
        support:
          $ref: '#/components/schemas/Support'
    CreateClusterResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the cluster created.
    GetClusterResponse:
      type: object
      required:
        - id
        - name
        - description
        - cloudProvider
        - couchbaseServer
        - serviceGroups
        - availability
        - support
        - currentState
        - audit
      properties:
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the cluster created.
        appServiceId:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the linked App Service.
        name:
          type: string
          description: Name of the cluster (up to 256 characters).
          example: Test Cluster
          maxLength: 256
        description:
          type: string
          description: Description of the cluster (up to 1024 characters).
          example: Description of the cluster
          maxLength: 1024
        cloudProvider:
          $ref: '#/components/schemas/CloudProvider'
        couchbaseServer:
          $ref: '#/components/schemas/CouchbaseServer'
        serviceGroups:
          type: array
          items:
            $ref: '#/components/schemas/ServiceGroup'
        availability:
          $ref: '#/components/schemas/Availability'
        support:
          $ref: '#/components/schemas/Support'
        currentState:
          $ref: '#/components/schemas/CurrentState'
        audit:
          $ref: '#/components/schemas/CouchbaseAuditData'
    GetClustersResponse:
      type: object
      required:
        - data
        - cursor
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetClusterResponse'
        cursor:
          $ref: '#/components/schemas/Cursor'
    UpdateClusterRequest:
      type: object
      required:
        - name
        - description
        - serviceGroups
        - support
      properties:
        name:
          type: string
          maxLength: 256
          description: The new name of the cluster (up to 256 characters).
          example: My-New-Cluster
        description:
          type: string
          maxLength: 1024
          description: The new cluster description (up to 1024 characters).
          example: The extended description of my new cluster.
        support:
          $ref: '#/components/schemas/Support'
        serviceGroups:
          type: array
          items:
            $ref: '#/components/schemas/ServiceGroup'
    UpdateClusterResponse:
      type: object
      required:
        - id
        - name
        - description
        - cloudProvider
        - couchbaseServer
        - serviceGroups
        - availability
        - support
        - currentState
        - audit
      properties:
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the cluster created.
        name:
          type: string
          description: The new name of the cluster.
          example: My-New-Cluster
          maxLength: 256
        description:
          type: string
          description: The new cluster description (up to 1024 characters).
          example: The extended description of my new cluster.
          maxLength: 1024
        cloudProvider:
          $ref: '#/components/schemas/CloudProvider'
        couchbaseServer:
          $ref: '#/components/schemas/CouchbaseServer'
        serviceGroups:
          type: array
          items:
            $ref: '#/components/schemas/ServiceGroup'
        availability:
          $ref: '#/components/schemas/Availability'
        support:
          $ref: '#/components/schemas/Support'
        currentState:
          $ref: '#/components/schemas/CurrentState'
        audit:
          $ref: '#/components/schemas/CouchbaseAuditData'
    CreateDatabaseCredentialRequest:
      type: object
      required:
        - name
        - access
      properties:
        name:
          type: string
          description: Username for the database credential (up to 256 characters).
          example: RW
          maxLength: 256
          minLength: 2
        password:
          type: string
          description: 'A password associated with the database credential. If this field is left empty, a password will be auto-generated.'
          example: Passw0rd!
        access:
          type: array
          description: Describes the access information of the database credential.
          items:
            $ref: '#/components/schemas/Access'
    CreateDatabaseCredentialResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the database credential created.
        password:
          type: string
          description: 'A password associated with the database credential. Password will have a minimum length of 8 characters and contain at least one lowercase letter, one uppercase letter, one number, and one special character.'
          example: P@ssw0rd!
    CreateUserRequest:
      type: object
      required:
        - email
        - organizationRoles
      properties:
        name:
          type: string
          description: The name of the user.
          example: John
        email:
          $ref: '#/components/schemas/Email'
        organizationRoles:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationRoles'
          example:
            - organizationOwner
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          default: []
          example: []
    CreateUserResponse:
      type: object
      properties:
        id:
          type: string
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The UUID of the user created.
    GetUserResponse:
      type: object
      required:
        - id
        - name
        - email
        - status
        - inactive
        - organizationId
        - organizationRoles
        - audit
      properties:
        id:
          type: string
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The UUID of the user created.
        name:
          type: string
          example: alex
          description: The name of the user.
        email:
          $ref: '#/components/schemas/Email'
        status:
          type: string
          description: |
            Depicts user status whether they are verified or not.
            - verified: It reflects a verified state for an email address where the user has proven that they have access to the email account.
            - not-verified: It reflects an unverified or pending verification state.
            - pending-primary: It reflects an unverified primary email address
          enum:
            - verified
            - not-verified
            - pending-primary
          example: not-verified
        inactive:
          type: boolean
          description: Depicts whether the user has accepted the invite for the organization.
          example: false
        organizationId:
          type: string
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: A GUID4 identifier of the tenant.
        organizationRoles:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationRoles'
        lastLogin:
          type: string
          format: date-time
          example: '2023-07-17T07:05:39.116124897Z'
          description: Time(UTC) at which user last logged in.
        region:
          type: string
          example: North America
          description: Region of the user.
        timeZone:
          type: string
          example: '(UTC -9:00) Alaska Standard Time'
          description: Time zone of the user.
        enableNotifications:
          type: boolean
          example: true
          description: 'After enabling email notifications for your account, you will start receiving email notification alerts from all databases in projects you are a part of.'
        expiresAt:
          type: string
          format: date-time
          example: '2023-07-17T07:05:39.116124897Z'
          description: Time at which user expires.
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        audit:
          $ref: '#/components/schemas/CouchbaseAuditData'
    GetUsersResponse:
      type: object
      required:
        - data
        - cursor
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetUserResponse'
        cursor:
          $ref: '#/components/schemas/Cursor'
    PatchUserRequest:
      type: array
      items:
        $ref: '#/components/schemas/PatchEntry'
    ServiceGroup:
      description: 'The set of nodes that share the same disk, number of nodes and services.'
      type: object
      properties:
        node:
          $ref: '#/components/schemas/Node'
        numOfNodes:
          type: integer
          description: Number of nodes. The minimum number of nodes for the cluster can be 3 and maximum can be 27 nodes. Additional service groups can have 2 nodes minimum and 24 nodes maximum.
          example: 3
        services:
          type: array
          description: The couchbase service to run on the node.
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Service'
    CurrentState:
      type: string
      enum:
        - draft
        - deploying
        - scaling
        - upgrading
        - rebalancing
        - peering
        - destroying
        - healthy
        - degraded
        - turnedOff
        - turningOff
        - turningOn
        - deploymentFailed
        - scaleFailed
        - upgradeFailed
        - rebalanceFailed
        - peeringFailed
        - destroyFailed
        - offline
        - turningOffFailed
        - turningOnFailed
      example: deploying
    CloudProvider:
      type: object
      description: |
        The cloud provider where the cluster will be hosted.
        For information about providers and supported regions, see:

        - [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html)

        - [Google Cloud Platform](https://docs.couchbase.com/cloud/reference/gcp.html)

        - [Microsoft Azure](https://docs.couchbase.com/cloud/reference/azure.html)
      required:
        - type
        - region
        - cidr
      properties:
        type:
          type: string
          description: |
            Cloud provider type.

            1. `aws`: Amazon Web Services

            2. `gcp`: Google Cloud Platform

            3. `azure`: Microsoft Azure
          enum:
            - aws
            - gcp
            - azure
          example: aws
        region:
          type: string
          description: 'Cloud provider region, for example `us-west-2`.'
          example: us-east-1
        cidr:
          type: string
          pattern: '^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\/\d{1,2}$'
          description: CIDR block for Cloud Provider.
          example: 10.1.30.0/23
    CouchbaseServer:
      type: object
      properties:
        version:
          type: string
          description: 'Version of the Couchbase Server to be installed in the cluster. Refer to documentation [here](https://docs.couchbase.com/cloud/clusters/upgrade-database.html#server-version-maintenance-support) for list of supported versions. The latest Couchbase Server version will be deployed by default.'
          example: '7.1'
    Availability:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: 'Availability zone type, either ''single'' or ''multi''.'
          example: single
          enum:
            - single
            - multi
    Support:
      type: object
      required:
        - plan
        - timezone
      properties:
        plan:
          type: string
          description: 'Plan type, either ''Basic'', ''Developer Pro'', or ''Enterprise''.'
          enum:
            - basic
            - developer pro
            - enterprise
          example: basic
        timezone:
          type: string
          description: The standard timezone for the cluster. Should be the TZ identifier.
          example: ET
          enum:
            - ET
            - GMT
            - IST
            - PT
    Node:
      type: object
      required:
        - compute
        - disk
      properties:
        compute:
          $ref: '#/components/schemas/Compute'
        disk:
          oneOf:
            - $ref: '#/components/schemas/DiskAWS'
            - $ref: '#/components/schemas/DiskAzure'
            - $ref: '#/components/schemas/DiskGCP'
          example:
            type: gp3
            storage: 50
            iops: 3000
    Compute:
      type: object
      description: |-
        Following are the supported compute combinations for CPU and RAM for different cloud providers.
        To learn more, see [Amazon Web Services](https://docs.couchbase.com/cloud/reference/aws.html).
      required:
        - cpu
        - ram
      properties:
        cpu:
          type: integer
          description: CPU units (cores).
          example: 4
        ram:
          type: integer
          description: RAM units (GB).
          example: 16
    DiskAWS:
      type: object
      required:
        - type
        - storage
        - iops
      properties:
        type:
          type: string
          description: Type of disk. Please choose from the given list for AWS cloud provider.
          enum:
            - gp3
            - io2
          example: gp3
        storage:
          type: integer
          description: Storage in GB. See documentation for supported storage.
          example: 50
          minimum: 50
        iops:
          type: integer
          description: Please refer to documentation for supported IOPS.
          example: 3000
    DiskAzure:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: Type of disk. Please choose from the given list for Azure cloud provider.
          enum:
            - P6
            - P10
            - P15
            - P20
            - P30
            - P40
            - P50
            - P60
            - Ultra
        storage:
          type: integer
          description: Storage in GB. Required for ultra disk types. Please refer to documentation for supported storage.
          example: 50
          minimum: 50
        iops:
          type: integer
          description: Required for ultra disk types. Please refer to documentation for supported IOPS.
          example: 3000
    DiskGCP:
      type: object
      required:
        - type
        - storage
      properties:
        type:
          type: string
          description: Type of disk. Please choose from the given list for GCP cloud provider.
          enum:
            - pd-ssd
        storage:
          type: integer
          description: Storage in GB. Please refer to documentation for supported storage.
          example: 50
          minimum: 50
    Service:
      type: string
      enum:
        - data
        - query
        - index
        - search
        - analytics
        - eventing
      example: data
    AllowedCidr:
      type: object
      required:
        - id
        - cidr
        - status
        - type
        - audit
      properties:
        id:
          type: string
          description: The ID of the allowed CIDR.
          example: ffffffff-aaaa-1414-eeee-000000000000
        cidr:
          type: string
          description: |
            The trusted CIDR to allow the database connections from. The example
            represents a single IP address (i.e. a subnet mask of 32).
          example: 1.23.45.67/32
        comment:
          type: string
          description: A short description of the allowed CIDR.
          example: Allows access from my local developer machine
        expiresAt:
          type: string
          description: |
            An RFC3339 timestamp determining when the allowed CIDR will expire.
            If this field is omitted then the allowed CIDR is permanent and will never automatically expire.
          format: date-time
          example: 2023-05-14T21:49:58.465Z
        status:
          type: string
          description: The current status of the allowed CIDR.
          enum:
            - active
            - expired
          example: active
        type:
          type: string
          enum:
            - temporary
            - permanent
          default: permanent
          description: Whether the allowed CIDR is permanent or has an expiry.
          example: temporary
        audit:
          $ref: '#/components/schemas/CouchbaseAuditData'
    CreateAllowedCidrRequest:
      type: object
      required:
        - cidr
      properties:
        cidr:
          type: string
          description: |
            The trusted CIDR to allow the database connections from. The example
            represents a single IP address (i.e. a subnet mask of 32).
          example: 6.60.28.100/32
        comment:
          type: string
          description: A short description of the allowed CIDR.
          example: Allows access from my local developer machine
        expiresAt:
          type: string
          format: date-time
          description: |
            An RFC3339 timestamp determining when the allowed CIDR should expire.
            If this field is empty/omitted then the allowed CIDR is permanent and will never automatically expire.
          example: 2023-05-14T21:49:58.465Z
    CreateAllowedCidrResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the allowed CIDR.
    GetAllowedCidrsResponse:
      type: object
      required:
        - data
        - cursor
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AllowedCidr'
        cursor:
          $ref: '#/components/schemas/Cursor'
    Access:
      type: object
      required:
        - privileges
      properties:
        privileges:
          type: array
          items:
            type: string
          description: The list of privileges granted on the resources.
          example:
            - Read
            - Write
        resources:
          type: object
          description: The resources for which access will be granted on. Leaving this empty will grant access to all buckets.
          properties:
            buckets:
              type: array
              items:
                $ref: '#/components/schemas/ResourceBucket'
    ResourceBucket:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the bucket.
          example: travel-sample
        scopes:
          type: array
          description: The scopes under a bucket.
          items:
            $ref: '#/components/schemas/ResourceScope'
    ResourceScope:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: inventory
          description: The name of the scope.
        collections:
          type: array
          description: The collections under a scope.
          items:
            type: string
          example:
            - airlines
            - airport
            - tickets
    GetDatabaseCredentialResponse:
      type: object
      required:
        - id
        - name
        - access
        - audit
      properties:
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the database credential created.
        name:
          type: string
          description: Name of the database credential created (up to 256 characters).
          example: ReadInventory
          maxLength: 256
        audit:
          $ref: '#/components/schemas/CouchbaseAuditData'
        access:
          type: array
          items:
            $ref: '#/components/schemas/Access'
    GetDatabaseCredentialsResponse:
      type: object
      required:
        - cursor
        - data
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetDatabaseCredentialResponse'
    UpdateDatabaseCredentialRequest:
      type: object
      properties:
        access:
          type: array
          description: Describes the access information of the database credential.
          items:
            $ref: '#/components/schemas/Access'
        password:
          type: string
          example: Pa$$w0rd
          description: The updated password of the database credential.
    CreateBucketRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: |
            Name of the bucket. This field cannot be changed later. The name should be according to the following rules:

            1. Characters used for the name should be in the ranges of A-Z, a-z, and 0-9; plus the underscore, period, dash, and percent characters.

            2. The name can be a maximum of 100 characters in length.

            3. The name cannot have 0 characters or empty. Minimum length of name is 1.

            4. The name cannot start with a `.` (period).
          maxLength: 100
          example: My-First-Bucket
        type:
          $ref: '#/components/schemas/Type'
        storageBackend:
          $ref: '#/components/schemas/StorageBackend'
        memoryAllocationInMb:
          type: integer
          description: |
            The amount of memory to allocate for the bucket memory in MiB. This is the maximum limit is dependent on the allocation of the KV service. For example, 80% of the allocation.

            - The default value (100MiB) mentioned is for Couchbase type buckets with Couchstore as the Storage Backend.

            - For Couchbase buckets, the default and minimum memory allocation changes according to the Storage Backend type as follows:

              1. For Couchstore, the default and minimum memory allocation is 100 MiB.

              2. For Magma, the default and minimum memory allocation is 1024 MiB.

            - For Ephemeral buckets, the default and minimum memory allocation is 100 MiB.
          example: 100
          default: 100
        bucketConflictResolution:
          $ref: '#/components/schemas/BucketConflictResolution'
        durabilityLevel:
          $ref: '#/components/schemas/DurabilityLevel'
        replicas:
          $ref: '#/components/schemas/Replicas'
        flush:
          type: boolean
          description: Determines whether flushing is enabled on the bucket. Enable Flush to delete all items in this bucket at the earliest opportunity. Disable Flush to avoid inadvertent data loss.
          default: false
          example: false
        timeToLiveInSeconds:
          type: integer
          description: 'Specify the time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. Default is 0, that means TTL is disabled. This is a non-negative value.'
          default: 0
          example: 0
        evictionPolicy:
          $ref: '#/components/schemas/EvictionPolicy'
    CreateBucketResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: dGVzdA
          description: The ID of the bucket. This is the base64 encoding of the bucket name.
    GetBucketResponse:
      type: object
      required:
        - id
        - name
        - timeToLiveInSeconds
        - replicas
        - type
        - storageBackend
        - memoryAllocationInMb
        - bucketConflictResolution
        - durabilityLevel
        - evictionPolicy
        - stats
      properties:
        id:
          type: string
          example: dGVzdA
          description: The ID of the bucket. This is the base64 encoding of the bucket name.
        name:
          type: string
          description: Name of the bucket.
          example: My-First-Bucket
        type:
          type: string
          description: |-
            Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation. The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.
            To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).
        storageBackend:
          type: string
          description: |-
            Type of the bucket. If selected Ephemeral, it is not eligible for imports or App Endpoints creation.
            The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.
            To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).
          example: couchstore
        memoryAllocationInMb:
          type: integer
          description: 'The amount of memory to allocate for the bucket memory in MiB. The maximum limit is dependent on the allocation of the KV service.For example, 80% of the allocation.'
          example: 100
        bucketConflictResolution:
          type: string
          description: |-
            The means in which conflicts are resolved during replication. This field may be referred to as conflictResolution in the Couchbase documentation, and seqno and lww may be referred to as sequence Number and Timestamp respectively.
            To learn more, see [Conflict Resolution](https://docs.couchbase.com/cloud/clusters/xdcr/xdcr.html#conflict-resolution).
        durabilityLevel:
          type: string
          description: |
            This is the minimum level at which all writes to the Couchbase bucket must occur.

            The options for Durability level are as follows, according to the bucket type.

            - For a Couchbase bucket:

              1. None

              2. Replicate to Majority

              3. Majority and Persist to Active

              4. Persist to Majority

            - For an Ephemeral bucket:

              1. None

              2. Replicate to Majority

             To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).
        replicas:
          type: integer
          description: |-
            The number of replicas for the bucket.
            To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).
        flush:
          type: boolean
          description: Determines whether flushing is enabled on the bucket. Enable Flush to delete all items in this bucket at the earliest opportunity.
          example: false
        timeToLiveInSeconds:
          type: integer
          description: 'Specifies the time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. If specified as 0, TTL is disabled. This is a non-negative value.'
          example: 100
        evictionPolicy:
          $ref: '#/components/schemas/EvictionPolicy'
        stats:
          $ref: '#/components/schemas/Stats'
    GetBucketsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBucketResponse'
    UpdateBucketRequest:
      type: object
      required:
        - memoryAllocationInMb
        - durabilityLevel
        - replicas
        - flush
        - timeToLiveInSeconds
      properties:
        memoryAllocationInMb:
          type: integer
          description: |
            The new amount of memory to allocate for the bucket memory in MiB.
            The maximum limit is dependent on the allocation of the KV service; for example, 80% of the allocation.

            - For Couchbase buckets, the default and minimum memory allocation changes according to the Storage Backend type, as follows:

              1. For Couchstore, the default and minimum memory allocation is 100 MiB.

              2. For Magma, the default and minimum memory allocation is 1024 MiB.

            - For Ephemeral buckets, the default and minimum memory allocation is 100 MiB.
          example: 100
        durabilityLevel:
          type: string
          description: |
            This is the minimum level at which all writes to the bucket must occur.

            The options for Durability level are as follows, according to the bucket type.

            - For a Couchbase bucket:

              1. None

              2. Replicate to Majority

              3. Majority and Persist to Active

              4. Persist to Majority

            - For an Ephemeral bucket:

              1. None

              2. Replicate to Majority

              To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).
          enum:
            - none
            - majority
            - majorityAndPersistActive
            - persistToMajority
        replicas:
          type: integer
          description: |-
            The number of replicas for the bucket.
            To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).
          enum:
            - 1
            - 2
            - 3
        flush:
          type: boolean
          description: The new value of flush. This determines whether flushing is enabled on the bucket. Enable Flush to delete all items in this bucket at the earliest opportunity. Disable Flush to avoid inadvertent data loss.
        timeToLiveInSeconds:
          type: integer
          description: 'Specify the new time to live (TTL) value in seconds. This is the maximum time to live for items in the bucket. If specified as 0, TTL is disabled. This is a non-negative value.'
          example: 100
    Stats:
      type: object
      required:
        - itemCount
        - opsPerSecond
        - diskUsedInMib
        - memoryUsedInMib
      properties:
        itemCount:
          type: integer
          description: Number of documents in the bucket.
          example: 10
        opsPerSecond:
          type: integer
          description: Number of operations per second.
          example: 0
        diskUsedInMib:
          type: integer
          description: The amount of disk used (in MiB).
          example: 17
        memoryUsedInMib:
          type: integer
          description: The amount of memory used (in MiB).
          example: 50
    CreateAPIKeyRequest:
      type: object
      required:
        - name
        - organizationRoles
      properties:
        name:
          $ref: '#/components/schemas/APIKeyName'
        description:
          $ref: '#/components/schemas/APIKeyDescription'
        expiry:
          $ref: '#/components/schemas/APIKeyExpiry'
        allowedCIDRs:
          $ref: '#/components/schemas/APIKeyAllowedCIDRs'
        organizationRoles:
          type: array
          items:
            $ref: '#/components/schemas/APIKeyOrganizationRoles'
        resources:
          $ref: '#/components/schemas/APIKeyResources'
    CreateAPIKeyResponse:
      type: object
      required:
        - id
        - token
      properties:
        id:
          $ref: '#/components/schemas/APIKeyId'
        token:
          type: string
          example: QktxVUtFU1dKV1FlMmxwbzJBYXdnTVlRemFZdlRDZTg6eFh4dzU4JUYjekJVYWZPY3lqdUwwYkJoTjZSTmlzRWFIRHF0b1h4a08yazBpQjJ1bms1OW4yTUhAenRib3IhVQ==
          description: |
            The Token is a confidential piece of information that is used to authorize requests made to v4 endpoints.
    RotateAPIKeyRequest:
      type: object
      properties:
        secret:
          type: string
          description: |
            A secret associated with API key. One has to follow the secret key policy, such as allowed characters and a length of 64 characters. 
            If this field is left empty, a secret will be auto-generated.
          example: jawuXxSXYaWdr@uSSphmV1aJ4siKKcHHXnhhtbE8h8H!O2nbIQJ62M40stDATiBp
    RotateAPIKeyResponse:
      type: object
      required:
        - secretKey
      properties:
        secretKey:
          type: string
          example: GaC4FQLCoUqoKUMBvl6BgRK1Ivqu5yF8OkDBhnP%#CH%S4T@bTVUdP#rY#VSicbx
          description: |
            The Secret key is a confidential piece of information that is paired with the Access key.
            The API key is made of an Access key and a Secret key.
    GetAPIKey:
      type: object
      required:
        - id
        - name
        - description
        - expiry
        - allowedCIDRs
        - organizationRoles
        - resources
        - audit
      properties:
        id:
          $ref: '#/components/schemas/APIKeyId'
        name:
          $ref: '#/components/schemas/APIKeyName'
        description:
          $ref: '#/components/schemas/APIKeyDescription'
        expiry:
          $ref: '#/components/schemas/APIKeyExpiry'
        allowedCIDRs:
          $ref: '#/components/schemas/APIKeyAllowedCIDRs'
        organizationRoles:
          type: array
          items:
            $ref: '#/components/schemas/APIKeyOrganizationRoles'
        resources:
          $ref: '#/components/schemas/APIKeyResources'
        audit:
          $ref: '#/components/schemas/CouchbaseAuditData'
    GetAPIKeys:
      type: object
      required:
        - data
        - cursor
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetAPIKey'
        cursor:
          $ref: '#/components/schemas/Cursor'
    StorageBackend:
      type: string
      description: |
        The storage engine to be assigned to and used by the bucket.

        - Ephemeral buckets do not support StorageBackend, hence not applicable for Ephemeral buckets and throws an error if this field is added.

        - This field is only applicable for a Couchbase bucket. The default value mentioned (Couchstore) is for Couchbase bucket.

        - This field cannot be changed later.

          To learn more, see [Storage Engines](https://docs.couchbase.com/cloud/clusters/data-service/storage-engines.html).
      enum:
        - couchstore
        - magma
      example: couchstore
      default: couchstore
    Type:
      type: string
      description: |
        Type of the bucket.

        - If selected Ephemeral, it is not eligible for imports or App Endpoints creation. This field cannot be changed later.

        - The options may also be referred to as Memory and Disk (Couchbase), Memory Only (Ephemeral) in the Couchbase documentation.

        To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).
      enum:
        - couchbase
        - ephemeral
      default: couchbase
    BucketConflictResolution:
      type: string
      description: |
        The means by which conflicts are resolved during replication.

        - This field may be referred to as "conflict resolution" in the Couchbase documentation, and `seqno` and `lww` may be referred to as "sequence number" and "timestamp" respectively.

        - This field cannot be changed later.

         To learn more, see [Conflict Resolution](https://docs.couchbase.com/cloud/clusters/xdcr/xdcr.html#conflict-resolution).
      enum:
        - seqno
        - lww
      default: seqno
    DurabilityLevel:
      type: string
      description: |
        This is the minimum level at which all writes to the bucket must occur.

         The options for Durability level are as follows, according to the bucket type.

         - For a Couchbase bucket:

           1. None

           2. Replicate to Majority

           3. Majority and Persist to Active

           4. Persist to Majority

         - For an Ephemeral bucket:

           1. None

           2. Replicate to Majority

         To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).
      enum:
        - none
        - majority
        - majorityAndPersistActive
        - persistToMajority
      default: none
    Replicas:
      type: integer
      description: |-
        The number of replicas for the bucket.
        To learn more, see [Create a Bucket](https://docs.couchbase.com/cloud/clusters/data-service/manage-buckets.html#add-bucket).
      enum:
        - 1
        - 2
        - 3
      default: 1
    EvictionPolicy:
      type: string
      description: |
        The policy which Capella adopts to prevent data loss due to memory exhaustion.
        This may be also known as Ejection Policy in the Couchbase documentation. 

        - For Couchbase bucket, Eviction Policy is `fullEviction` by default.

        - For Ephemeral buckets, Eviction Policy is a required field, and should be one of the following:

           1. noEviction

           2. nruEviction

          To learn more, see [Ejection Policy](https://docs.couchbase.com/server/current/rest-api/rest-bucket-create.html#evictionpolicy).
      enum:
        - fullEviction
        - noEviction
        - nruEviction
      example: fullEviction
      default: fullEviction
    APIKeyResources:
      type: array
      description: |
        Resources are the resource level permissions associated with the API key.

        To learn more about Organization Roles, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).
      items:
        $ref: '#/components/schemas/APIKeyResourcesItems'
      default: []
    APIKeyResourcesItems:
      type: object
      required:
        - id
        - roles
      properties:
        type:
          type: string
          default: project
          description: |
            Type of the resource.
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: |
            ID of the project.
        roles:
          type: array
          items:
            type: string
            enum:
              - projectOwner
              - projectManager
              - projectViewer
              - projectDataReaderWriter
              - projectDataReader
          example:
            - projectDataReaderWriter
            - projectManager
          description: |
            Project Roles associated with the API key.

            To learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).
    APIKeyId:
      type: string
      example: IS9DrRsw4KWFS72Zhbj4xmhllHvPcdCL
      description: |
        The id is a unique identifier for an apiKey.
    APIKeyAllowedCIDRs:
      type: array
      items:
        type: string
      example:
        - 0.0.0.0/0
      description: |
        List of inbound CIDRs for the API key.
        The system making a request must come from one of the allowed CIDRs.
      default:
        - 0.0.0.0/0
    APIKeyDescription:
      type: string
      description: |
        Description for the API key.
      example: API key to manage production Capella Cluster.
      default: ''
    APIKeyExpiry:
      type: number
      format: float
      default: 180
      description: |
        Expiry of the API key in number of days.
        If set to -1, the token will not expire.
    APIKeyName:
      type: string
      description: |
        Name of the API key.
      example: Production
    APIKeyOrganizationRoles:
      type: string
      enum:
        - organizationOwner
        - organizationMember
        - projectCreator
      example: organizationMember
      description: |
        Organization roles assigned to the API key.

        To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).
    OrganizationRoles:
      type: string
      enum:
        - organizationOwner
        - organizationMember
        - projectCreator
      example: projectCreator
      description: |
        Organization roles assigned to the User.

        To learn more, see [Organization Roles](https://docs.couchbase.com/cloud/organizations/organization-user-roles.html).
    ProjectRoles:
      type: string
      enum:
        - projectOwner
        - projectManager
        - projectViewer
        - projectDataReaderWriter
        - projectDataReader
      example: projectManager
      description: |
        Project Roles associated with the User.

        To learn more about Project Roles, see [Project Roles](https://docs.couchbase.com/cloud/projects/project-roles.html).
    Email:
      type: string
      description: Email of the user.
      example: john.doe@example.com
    ResourceType:
      type: string
      enum:
        - project
      default: project
      example: project
      description: |
        Type of the resource.
    Resource:
      type: object
      required:
        - id
        - roles
      properties:
        type:
          $ref: '#/components/schemas/ResourceType'
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: |
            Id of the project.
        roles:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRoles'
    PatchEntry:
      type: object
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: Type of operation.
          enum:
            - add
            - remove
        path:
          type: string
          example: /organizationRoles
          description: |
            Path of resource that needs to be updated.

            Organization Roles: `/organizationRoles`

            Resources: `/resources/{resourceId}`

            Resource Roles: `/resources/{resourceId}/roles`
        value:
          oneOf:
            - type: array
              items:
                $ref: '#/components/schemas/OrganizationRoles'
            - type: array
              items:
                $ref: '#/components/schemas/ProjectRoles'
            - $ref: '#/components/schemas/Resource'
    GetOrganizationResponse:
      type: object
      required:
        - id
        - name
        - description
        - audit
        - preferences
      properties:
        id:
          type: string
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: A GUID4 identifier of the organization.
          format: uuid
        name:
          type: string
          example: My-Organization
          description: The name of the organization.
        description:
          type: string
          example: The description of the organization.
          description: The description of a particular organization.
        preferences:
          $ref: '#/components/schemas/Preferences'
        audit:
          $ref: '#/components/schemas/CouchbaseAuditData'
    GetOrganizationsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetOrganizationResponse'
    GetCertificateResponse:
      type: object
      required:
        - certificate
      properties:
        certificate:
          type: string
          example: |
            -----BEGIN CERTIFICATE-----
            MIIDFTCCAf2gAwIBAgI[...]CSYBWaK0ofivA==
            -----END CERTIFICATE-----
    Preferences:
      type: object
      description: Preferences stores preferences for the organization.
      properties:
        sessionDuration:
          type: integer
          format: uint32
          description: Maximum allowed time in seconds inside the organization for a user.
          example: 3600
          default: 7200
    CreateScheduledBackupRequest:
      description: Backup schedule type.
      type: object
      properties:
        type:
          type: string
          enum:
            - weekly
          example: weekly
        weeklySchedule:
          type: object
          description: Schedule a full backup once a week with regular incrementals.
          required:
            - dayOfWeek
            - startAt
            - incrementalEvery
            - retentionTime
            - costOptimizedRetention
          properties:
            dayOfWeek:
              type: string
              description: Day of the week for the backup.
              enum:
                - sunday
                - monday
                - tuesday
                - wednesday
                - thursday
                - friday
                - saturday
              example: sunday
            startAt:
              type: integer
              description: Start at hour (in 24-Hour format).
              enum:
                - 0
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
                - 7
                - 8
                - 9
                - 10
                - 11
                - 12
                - 13
                - 14
                - 15
                - 16
                - 17
                - 18
                - 19
                - 20
                - 21
                - 22
                - 23
            incrementalEvery:
              type: integer
              description: Interval in hours for incremental backup.
              enum:
                - 1
                - 2
                - 4
                - 6
                - 8
                - 12
                - 24
              example: 4
            retentionTime:
              type: string
              description: Retention time in days.
              enum:
                - 30days
                - 60days
                - 90days
                - 180days
                - 1year
                - 2years
                - 3years
                - 4years
                - 5years
              example: 90days
            costOptimizedRetention:
              type: boolean
              description: 'Optimize backup retention to reduce total cost of ownership (TCO). This gives the option to keep all but the last backup cycle of the month for thirty days; the last cycle will be kept for the defined retention period. To learn more, see [Cost Optimized Retention Policy](https://docs.couchbase.com/cloud/clusters/backup-restore.html#cost-optimized-retention-policy).'
              example: false
    GetScheduledBackupResponse:
      description: Backup schedule type.
      type: object
      required:
        - type
        - clusterID
        - bucketId
        - weeklySchedule
      properties:
        type:
          type: string
          example: weekly
        clusterID:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the cluster.
        bucketId:
          type: string
          example: dGVzdA
          description: The ID of the bucket. This is the Base64 encoding of the bucket name.
        weeklySchedule:
          $ref: '#/components/schemas/WeeklySchedule'
    GetBackupResponse:
      type: object
      required:
        - id
        - clusterID
        - tenantID
        - projectID
        - cycleID
        - status
        - method
        - bucketName
        - bucketID
        - source
        - provider
        - stats
        - elapsedTimeInSeconds
        - scheduleInfo
      properties:
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the backup created.
        clusterID:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the cluster.
        tenantID:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the organization.
        projectID:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the project.
        cycleID:
          type: string
          description: The ID of the cycle this backup belongs to.
        date:
          type: string
          format: date-time
          description: |
            The RFC3339 timestamp representing the time at which backup was created.
          example: '2021-09-01T12:34:56Z'
        restoreBefore:
          type: string
          format: date-time
          description: |
            The RFC3339 timestamp representing the time at which backup will expire.
          example: '2021-09-02T12:34:56Z'
        status:
          $ref: '#/components/schemas/Status'
        method:
          $ref: '#/components/schemas/Method'
        bucketName:
          type: string
          description: The name of the bucket for which the backup belongs to.
          example: My-First-Bucket
        bucketID:
          type: string
          example: dGVzdA
          description: The ID of the bucket.This is the base64 encoding of the bucket name.
        source:
          $ref: '#/components/schemas/Source'
        provider:
          type: string
          description: The cloud provider where the cluster is hosted.
          example: aws
        stats:
          $ref: '#/components/schemas/BackupStats'
        elapsedTimeInSeconds:
          type: integer
          description: The amount of seconds that have elapsed between the creation and completion of the backup.
          example: 30
        scheduleInfo:
          $ref: '#/components/schemas/ScheduleInfo'
        bucketDownloadsCount:
          type: integer
          description: The number of downloadable backups the bucket this backup belongs to has.
          example: 2
    GetBackupByIDResponse:
      type: object
      required:
        - id
        - clusterID
        - tenantID
        - projectID
        - cycleID
        - status
        - method
        - bucketName
        - bucketID
        - source
        - provider
        - stats
        - elapsedTimeInSeconds
        - scheduleInfo
      properties:
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the backup created.
        clusterID:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the cluster.
        tenantID:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the organization.
        projectID:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the project.
        cycleID:
          type: string
          description: The ID of the cycle this backup belongs to.
        date:
          type: string
          format: date-time
          description: |
            The RFC3339 timestamp representing the time at which backup was created.
          example: '2021-09-01T12:34:56Z'
        restoreBefore:
          type: string
          format: date-time
          description: |
            The RFC3339 timestamp representing the time at which backup will expire.
          example: '2021-09-02T12:34:56Z'
        status:
          $ref: '#/components/schemas/Status'
        method:
          $ref: '#/components/schemas/Method'
        bucketName:
          type: string
          description: The name of the bucket for which the backup belongs to.
          example: My-First-Bucket
        bucketID:
          type: string
          example: dGVzdA
          description: The ID of the bucket.This is the base64 encoding of the bucket name.
        source:
          $ref: '#/components/schemas/Source'
        provider:
          type: string
          description: The cloud provider where the cluster is hosted.
          example: aws
        stats:
          $ref: '#/components/schemas/BackupStats'
        elapsedTimeInSeconds:
          type: integer
          description: The amount of seconds that have elapsed between the creation and completion of the backup.
          example: 30
        scheduleInfo:
          $ref: '#/components/schemas/ScheduleInfo'
    GetBackupsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBackupResponse'
    ListBackupsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetBackupByIDResponse'
    GetCyclesResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetCycleResponse'
    GetCycleResponse:
      type: object
      required:
        - cycleID
        - createdAt
      properties:
        cycleID:
          type: string
          format: uuid
          description: The ID of the cycle.
        createdAt:
          type: string
          format: date-time
          description: |
            The RFC3339 timestamp representing the time at which first backup was created in the cycle.
          example: '2021-09-01T12:34:56Z'
    ScheduleInfo:
      description: Represents the schedule information of the backup.
      type: object
      required:
        - backupType
        - backupTime
        - increment
        - retention
      properties:
        backupType:
          type: string
          description: Represents whether the backup is a Weekly or Daily backup.
          example: Weekly
        backupTime:
          type: string
          description: The timestamp indicating the backup created time.
          example: '2023-07-13 20:26:54.990864215 +0000 UTC'
        increment:
          type: integer
          description: Represents interval in hours for incremental backup.
          example: 4
        retention:
          type: string
          description: Represents retention time in days.
          example: 90days
    BackupStats:
      description: 'Represents various backup level data that couchbase provides. To learn more, see [Backup Summary](https://docs.couchbase.com/cloud/clusters/manage-backup.html#backup-summary)'
      type: object
      required:
        - cbas
        - event
        - fts
        - gsi
        - tombstones
        - mutations
        - items
        - sizeInMb
      properties:
        sizeInMb:
          type: number
          format: float
          description: Backup size in megabytes.
        items:
          type: integer
          description: The number of items saved during the backup.
          example: 150
        mutations:
          type: integer
          description: The number of mutations saved during the backup.
          example: 150
        tombstones:
          type: integer
          description: The number of tombstones saved during the backup.
          example: 4
        gsi:
          type: integer
          description: The number of global secondary indexes saved during the backup.
          example: 46
        fts:
          type: integer
          description: The number of full text search entities saved during the backup.
          example: 30
        cbas:
          type: integer
          description: The number of analytics entities saved during the backup.
          example: 30
        event:
          type: integer
          description: The number of event entities saved during the backup.
          example: 25
    Method:
      type: string
      description: |
        The mechanism of the backup.
        1. Incremental backups include the data that has changed since the last scheduled backup.
        2. Full backup includes all bucket data from the time the backup was created.
      enum:
        - incremental
        - full
      example: incremental
    Source:
      type: string
      description: |
        The way a backup job was initiated.
        1. Manual represents a manually triggered backup job or on-demand.
        2. Scheduled represents a backup job created from a schedule.
      enum:
        - manual
        - scheduled
      example: scheduled
    Status:
      type: string
      description: The status of the backup.
      enum:
        - pending
        - ready
        - failed
      example: pending
    CreateOnDemandRestoreRequest:
      type: object
      required:
        - targetClusterID
        - sourceClusterID
        - backupID
        - services
      properties:
        targetClusterID:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the target cluster to restore to.
        sourceClusterID:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the source cluster the restore is based on.
        backupID:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The backup record ID that contains the backup to restore from.
        services:
          $ref: '#/components/schemas/Services'
        forceUpdates:
          type: boolean
          example: true
          description: Forces data in the Couchbase cluster to be overwritten even if the data in the cluster is newer.
        autoRemoveCollections:
          type: boolean
          example: true
          description: Automatically delete scopes/collections which are known to be deleted in the backup.
        filterKeys:
          type: string
          example: ''
          description: Only restore data where the key matches a particular regular expression.
        filterValues:
          type: string
          example: ''
          description: Only restore data where the value matches a particular regular expression.
        includeData:
          type: string
          example: bucket-1.scope1
          description: Restores only the data specified here.
        excludeData:
          type: string
          example: bucket-1.scope1.coll1
          description: Skips restoring the data specified here.
        mapData:
          type: string
          example: bucket1=new1
          description: Specified when you want to restore source data into a different location.
        replaceTTL:
          type: string
          description: Sets a new expiration (time-to-live) value for the specified keys.
          enum:
            - none
            - all
            - expired
          example: all
        replaceTTLWith:
          type: string
          description: Updates the expiration for the keys.
          example: '2021-09-01T12:34:56Z'
    Services:
      type: array
      items:
        type: string
        enum:
          - data
          - query
      example:
        - data
        - query
    CreateAppServicerRequest:
      type: object
      required:
        - clusterId
        - name
      properties:
        name:
          type: string
          description: Name of the cluster (up to 256 characters).
          example: MyAppSyncService
          maxLength: 256
        description:
          type: string
          description: A short description of the App Service.
          example: My app sync service.
        nodes:
          type: integer
          description: Number of nodes configured for the App Service. Number of nodes configured for the App Service. The number of nodes can range from 2 to 12.
          example: 2
        compute:
          $ref: '#/components/schemas/AppServiceCompute'
        version:
          type: string
          description: 'The version of the App Service server. If left empty, it will be defaulted to the latest available version.'
          example: '3.0'
    CreateAppServicesResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the App Service created.
    GetAppServiceResponse:
      type: object
      required:
        - id
        - name
        - description
        - cloudProvider
        - nodes
        - compute
        - clusterId
        - currentState
        - version
        - audit
      properties:
        id:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the App Service created.
        name:
          type: string
          description: Name of the App Service (up to 256 characters).
          example: My App Service
          maxLength: 256
        description:
          type: string
          description: Description of the App Service (up to 1024 characters).
          example: Description of the App Service.
          maxLength: 1024
        cloudProvider:
          type: string
          description: Provider is the cloud service provider for the App Service.
          example: aws
        nodes:
          type: integer
          description: Number of nodes configured for the App Service.
          example: 2
        compute:
          $ref: '#/components/schemas/AppServiceCompute'
        clusterId:
          type: string
          format: uuid
          example: ffffffff-aaaa-1414-eeee-000000000000
          description: The ID of the cluster linked to the App Service.
        currentState:
          $ref: '#/components/schemas/AppServiceStates'
        version:
          type: string
          description: 'The version of the App Service server. If left empty, it will be defaulted to the latest available version.'
          example: 3.141.5
        audit:
          $ref: '#/components/schemas/CouchbaseAuditData'
    GetAppServicesResponse:
      type: object
      required:
        - data
        - cursor
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GetAppServiceResponse'
        cursor:
          $ref: '#/components/schemas/Cursor'
    UpdateAppServiceRequest:
      type: object
      required:
        - nodes
        - compute
      properties:
        nodes:
          type: integer
          description: Number of nodes configured for the App Service. The number of nodes can range from 2 to 12.
          example: 2
        compute:
          $ref: '#/components/schemas/AppServiceCompute'
    AppServiceCompute:
      type: object
      description: |
        The CPU and RAM configuration of the App Service. The supported combinations are:
        | CPU (cores)| RAM  (GB)   |
        | --------   |   -------   |
        | 2          | 4           |
        | 4          | 8           |
        | 8          | 16          |
        | 16         | 32          |
        | 36         | 72          |
      required:
        - cpu
        - ram
      properties:
        cpu:
          type: integer
          description: CPU units (cores).
          example: 2
        ram:
          type: integer
          description: RAM units (GB).
          example: 4
    AppServiceStates:
      type: string
      enum:
        - pending
        - deploying
        - deploymentFailed
        - destroying
        - destroyFailed
        - healthy
        - degraded
        - scaling
        - scaleFailed
        - upgrading
        - upgradeFailed
        - turnedOff
        - turningOff
        - turnOffFailed
        - turningOn
        - turnOnFailed
      example: deploying
    WeeklySchedule:
      type: object
      description: Schedule a full backup once a week with regular incrementals.
      required:
        - dayOfWeek
        - startAt
        - incrementalEvery
        - retentionTime
        - costOptimizedRetention
      properties:
        dayOfWeek:
          type: string
          description: Day of the week for the backup.
          example: sunday
        startAt:
          type: integer
          description: Start at hour (in 24-Hour format).
          example: 10
        incrementalEvery:
          type: integer
          description: Interval in hours for incremental backup.
          example: 4
        retentionTime:
          type: string
          description: Retention time in days.
          example: 90days
        costOptimizedRetention:
          type: boolean
          description: 'Optimize backup retention to reduce total cost of ownership (TCO). This gives the option to keep all but the last backup cycle of the month for thirty days; the last cycle will be kept for the defined retention period. To learn more, see [Cost Optimized Retention Policy](https://docs.couchbase.com/cloud/clusters/backup-restore.html#cost-optimized-retention-policy).'
          example: false
  responses:
    BadRequest:
      description: Returned when we are unable to decode the recevied payload.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            BadRequest:
              value:
                httpStatusCode: 400
                code: 6007
                message: The request was malformed or invalid.
                hint: The request was malformed or invalid.
    AccessForbidden:
      description: The client does not have the necessary permissions to access this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessForbidden:
              value:
                httpStatusCode: 403
                code: 1002
                message: Access Denied.
                hint: Your access to the requested resource is denied. Please make sure you have the necessary permissions to access the resource.
    InternalServerError:
      description: An unexpected error occurred in the server while processing this request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            InternalServerError:
              value:
                httpStatusCode: 500
                code: 10000
                message: An internal server error occurred.
                hint: Something went wrong on our end. We are actively investigating the issue.
    ResourceNotFound:
      description: The requested resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              value:
                httpStatusCode: 404
                code: 1005
                message: The server cannot find the resource.
                hint: The server cannot find the resource.
    UnprocessableContent:
      description: Request validation error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            UnprocessableContent:
              value:
                httpStatusCode: 422
                code: 1006
                message: The server can't process the content.
                hint: The server can't process the content.
    PreconditionFailed:
      description: Returned when there is a mismatch with the Etag version.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            PreconditionFailed:
              value:
                httpStatusCode: 422
                code: 1001
                message: Please ensure that payload or body of the request is not empty.
                hint: Please ensure that payload or body of the request is not empty.
    Unauthorized:
      description: The client does not have the valid credentials to access this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Unauthorized:
              value:
                httpStatusCode: 401
                code: 1001
                message: The request is unauthorized. Please ensure you have proper authentication credentials and try again.
                hint: The request is unauthorized. Please ensure you have proper authentication credentials and try again.
    RateLimitExceeded:
      description: Returned when the client exceeds the rate limit for the given APIKey.
      headers:
        Retry-After:
          schema:
            type: string
            description: 'The amount of time, in seconds, that the client should wait before sending subsequent requests.'
            example: 'Retry-After: 60'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            RateLimitExceeded:
              value:
                httpStatusCode: 429
                code: 1004
                message: Oops! You've made too many requests. Please wait for time specified in the retryAfter header before trying again.
                hint: The number of requests allowed per API key has exceeded. Please retry after time specified in the retryAfter header has passed.
  headers:
    ETag:
      description: 'Entity tag for the resource, used for caching and conditional requests.'
      schema:
        type: string
        example: 'Version: 1'
        description: |
          An ETag is a unique identifier assigned to a specific version of a resource on a web server.
          It allows the server to identify whether the version of the resource on the client side matches the version on the server side.
          This field represents the ETag value returned by the server for a particular resource.
  securitySchemes:
    token:
      type: http
      scheme: bearer
